{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ng2-smart-table/lib/components/cell/cell-view-mode/custom-view.component.ts","ng://ng2-smart-table/lib/components/cell/cell-view-mode/view-cell.component.ts","ng://ng2-smart-table/lib/components/cell/cell-edit-mode/edit-cell-default.ts","ng://ng2-smart-table/lib/components/cell/cell-edit-mode/custom-edit.component.ts","ng://ng2-smart-table/lib/components/cell/cell-editors/default-editor.ts","ng://ng2-smart-table/lib/components/cell/cell-editors/select-editor.component.ts","ng://ng2-smart-table/lib/components/cell/cell-editors/textarea-editor.component.ts","ng://ng2-smart-table/lib/components/cell/cell-editors/checkbox-editor.component.ts","ng://ng2-smart-table/lib/components/cell/cell-editors/completer-editor.component.ts","ng://ng2-smart-table/lib/components/cell/cell-editors/input-editor.component.ts","ng://ng2-smart-table/lib/components/cell/cell-edit-mode/default-edit.component.html","ng://ng2-smart-table/lib/components/cell/cell-edit-mode/default-edit.component.ts","ng://ng2-smart-table/lib/components/cell/cell-edit-mode/edit-cell.component.ts","ng://ng2-smart-table/lib/components/cell/cell.component.ts","ng://ng2-smart-table/lib/components/cell/cell.module.ts","ng://ng2-smart-table/lib/components/filter/filter-default.ts","ng://ng2-smart-table/lib/components/filter/custom-filter.component.ts","ng://ng2-smart-table/lib/components/filter/filter-types/default-filter.ts","ng://ng2-smart-table/lib/components/filter/filter-types/select-filter.component.ts","ng://ng2-smart-table/lib/components/filter/filter-types/checkbox-filter.component.ts","ng://ng2-smart-table/lib/components/filter/filter-types/completer-filter.component.ts","ng://ng2-smart-table/lib/components/filter/filter-types/input-filter.component.ts","ng://ng2-smart-table/lib/components/filter/default-filter.component.ts","ng://ng2-smart-table/lib/components/filter/filter.component.ts","ng://ng2-smart-table/lib/components/filter/filter.module.ts","ng://ng2-smart-table/lib/components/pager/pager.component.ts","ng://ng2-smart-table/lib/components/pager/pager.module.ts","ng://ng2-smart-table/lib/components/tbody/cells/custom.component.ts","ng://ng2-smart-table/lib/components/tbody/cells/edit-delete.component.ts","ng://ng2-smart-table/lib/components/tbody/cells/create-cancel.component.ts","ng://ng2-smart-table/lib/components/tbody/tbody.component.html","ng://ng2-smart-table/lib/components/tbody/tbody.component.ts","ng://ng2-smart-table/lib/components/tbody/tbody.module.ts","ng://ng2-smart-table/lib/components/thead/cells/checkbox-select-all.component.ts","ng://ng2-smart-table/lib/components/thead/cells/actions-title.component.ts","ng://ng2-smart-table/lib/components/thead/cells/title/title.component.ts","ng://ng2-smart-table/lib/components/thead/cells/column-title.component.ts","ng://ng2-smart-table/lib/components/thead/rows/thead-titles-row.component.ts","ng://ng2-smart-table/lib/components/thead/cells/add-button.component.ts","ng://ng2-smart-table/lib/components/thead/rows/thead-filters-row.component.ts","ng://ng2-smart-table/lib/components/thead/cells/actions.component.ts","ng://ng2-smart-table/lib/components/thead/rows/thead-form-row.component.ts","ng://ng2-smart-table/lib/components/thead/thead.component.html","ng://ng2-smart-table/lib/components/thead/thead.component.ts","ng://ng2-smart-table/lib/components/thead/thead.module.ts","ng://ng2-smart-table/lib/lib/helpers.ts","ng://ng2-smart-table/lib/lib/data-set/cell.ts","ng://ng2-smart-table/lib/lib/data-set/row.ts","ng://ng2-smart-table/lib/lib/data-set/column.ts","ng://ng2-smart-table/lib/lib/data-set/data-set.ts","ng://ng2-smart-table/lib/lib/grid.ts","ng://ng2-smart-table/lib/lib/data-source/data-source.ts","ng://ng2-smart-table/lib/lib/data-source/local/local.sorter.ts","ng://ng2-smart-table/lib/lib/data-source/local/local.filter.ts","ng://ng2-smart-table/lib/lib/data-source/local/local.pager.ts","ng://ng2-smart-table/lib/lib/data-source/local/local.data-source.ts","ng://ng2-smart-table/lib/ng2-smart-table.component.html","ng://ng2-smart-table/lib/ng2-smart-table.component.ts","ng://ng2-smart-table/lib/ng2-smart-table.module.ts","ng://ng2-smart-table/lib/lib/data-source/server/server-source.conf.ts","ng://ng2-smart-table/lib/lib/data-source/server/server.data-source.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","CustomViewComponent","resolver","ngOnInit","cell","customComponent","createCustomComponent","callOnComponentInit","patchInstance","ngOnDestroy","destroy","componentFactory","resolveComponentFactory","getColumn","renderComponent","dynamicTarget","createComponent","onComponentInitFunction","getOnComponentInitFunction","instance","assign","getPatch","value","getValue","rowData","getRow","getData","core","ɵɵdirectiveInject","ComponentFactoryResolver","selectors","viewQuery","rf","ctx","ViewContainerRef","i0.ɵɵtemplate","i0.ɵɵelement","i0.ɵɵproperty","i0.ɵɵelementStart","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵadvance","i0.ɵɵtextInterpolate","ViewCellComponent","inputs","decls","vars","consts","template","EditCellDefault","inputClass","edited","EventEmitter","onEdited","event","next","onStopEditing","isInEditing","onClick","stopPropagation","outputs","encapsulation","CustomEditComponent","_super","_this","call","ngOnChanges","changes","editor","component","subscribe","DefaultEditor","option_r1","ctx_r0","i0.ɵɵtextInterpolate1","SelectEditorComponent","features","ɵɵInheritDefinitionFeature","i0.ɵɵlistener","$event","emit","newValue","getId","isEditable","TextareaEditorComponent","getTitle","CheckboxEditorComponent","onChange","trueVal","getConfig","true","falseVal","false","target","checked","currVal_3","CompleterEditorComponent","completerService","completerStr","type","config","completer","dataService","local","data","searchFields","titleField","descriptionField","onEditedCompleter","title","ng2Completer","CompleterService","minSearchLength","pause","placeholder","InputEditorComponent","ɵɵrestoreView","_r6","ɵɵnextContext","_r10","ctx_r1","ctx_r2","_r16","ctx_r4","DefaultEditComponent","getEditorType","EditCellComponent","CellComponent","mode","isNew","grid","getNewRow","createConfirm","save","row","editConfirm","CellModule","imports","CommonModule","FormsModule","Ng2CompleterModule","declarations","exports","FilterDefault","filter","query","onFilter","source","addFilter","field","column","id","search","getFilterFunction","CustomFilterComponent","DefaultFilter","delay","changesSubscription","unsubscribe","setFilter","SelectFilterComponent","inputControl","valueChanges","pipe","skip","distinctUntilChanged","debounceTime","NgControl","CheckboxFilterComponent","filterActive","FormControl","getFilterConfig","resetFilter","preventDefault","setValue","emitEvent","CompleterFilterComponent","completerContent","Subject","map","ev","inputTextChanged","InputFilterComponent","ɵɵNgOnChangesFeature","i0.ɵɵpropertyInterpolate","ctx_r3","DefaultFilterComponent","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","FilterComponent","apply","arguments","firstChange","dataChangedSub","onChanged","dataChanges","filterConf","getFilter","filters","length","forEach","k","v","FilterModule","ReactiveFormsModule","i0.ɵɵtextInterpolate3","ctx_r12","paginate","ctx_r14","prev","ctx_r15","ctx_r16","getLast","_r20","currentPerPage","PagerComponent","showing","to","of","entries","perPageSelect","changePage","count","langContent","localStorage","getItem","lngobj","JSON","parse","common","paginationContentKey1","paginationContentKey2","paginationContentKey3","paginationContentKey5","page","getPaging","perPage","isPageOutOfBounce","setPage","processPageChange","initPages","shouldShow","getPage","getPages","pages","Math","ceil","pagesCount","showPagesCount","middleOne","lastOne","floor","i","push","onChangePerPage","toLowerCase","refresh","PagerModule","TbodyCustomComponent","custom","onCustom","action","name","TbodyEditDeleteComponent","edit","delete","editRowSelect","onEdit","getSetting","onDelete","deleteConfirm","isActionEdit","isActionDelete","editRowButtonContent","deleteRowButtonContent","TbodyCreateCancelComponent","onSave","onCancelEdit","saveButtonContent","cancelButtonContent","multipleSelectRow","row_r2","_r14","$implicit","ctx_r5","ctx_r6","editInputClass","ctx_r7","_r26","ctx_r8","userSelectRow","_r34","rowHover","ɵɵpureFunction1","_c1$1","isSelected","i0.ɵɵattribute","Ng2SmartTableTbodyComponent","cancel","defineProperty","actionColumns","isActionAdd","getColumns","isMultiSelectVisible","showActionColumnLeft","showActionColumn","showActionColumnRight","noDataMessage","rowClassFunction","attrs","_c0$5","TBodyModule","CheckboxSelectAllComponent","isAllSelected","_c0$6","ActionsTitleComponent","ref","ngAfterViewInit","nativeElement","classList","add","actionsColumnTitle","ElementRef","_c0$7","TitleComponent","currentDirection","sort","sortConf","getSort","fieldConf","_sort","changeSortDirection","setSort","direction","compare","getCompareFunction","newDirection","sortDirection","ColumnTitleComponent","selectAllRows","i0.ɵɵclassMapInterpolate1","i0.ɵɵstyleProp","column_r6","TheadTitlesRowComponent","_c0$8","AddButtonComponent","addNewButtonContent","onAdd","createFormShown","_c0$9","filterInputClass","TheadFitlersRowComponent","_c0$a","ActionsComponent","createButtonContent","addInputClass","TheadFormRowComponent","onCreate","_c0$b","_r4","_r7","Ng2SmartTableTheadComponent","isHideHeader","isHideSubHeader","_c0$c","THeadModule","deepExtend","objects","_i","val","src","args","slice","obj","isArray","keys","key","cloneDeep","Deferred","promise","Promise","resolve","reject","getDeepFromObject","object","defaultValue","split","level","prepareValue","Cell","dataSet","getValuePrepareFunction","Function","PREPARE","index","isAddable","Row","_dataSet","cells","process","getCell","find","el","getCells","getIsSelected","getNewData","values","setData","createCell","defValue","settings","Column","class","width","isSortable","isFilterable","defaultSortDirection","compareFunction","valuePrepareFunction","filterFunction","getFilterType","prepareType","indexOf","prepareSortDirection","determineType","DataSet","columnSettings","columns","rows","willSelect","createColumns","createNewRow","createRows","getRows","getFirstRow","getLastRow","findRowByData","deselectAll","selectRow","previousIsSelected","selectedRow","selectPreviousRow","selectFirstRow","selectLastRow","willSelectFirstRow","willSelectLastRow","select","newRow","Grid","onSelectRowSource","setSettings","setSource","position","isCurrentActionsPosition","isActionsVisible","getDataSet","prepareSource","processDataChange","onUpdated","onSelectRow","asObservable","confirmEmitter","deferred","then","newData","skipAdd","prepend","catch","err","confirm","skipEdit","update","remove","shouldProcessChange","determineRowToSelect","initialSource","getInitialSort","setPaging","getSelectedRows","r","status","DataSource","onChangedSource","onAddedSource","onUpdatedSource","onRemovedSource","emitOnChanged","load","onAdded","onRemoved","element","emitOnAdded","append","emitOnRemoved","emitOnUpdated","empty","conf","doEmit","andOperator","getElements","elements","paging","compareValues","a","LocalSorter","customCompare","dir","filterValues","toString","includes","LocalFilter","customFilter","LocalPager","LocalDataSource","filteredAndSorted","pagingConf","reset","unshift","found","Error","prepareData","getFilteredAndSorted","getAll","silent","currentFieldConf","mergedData_1","concat","elem","pos","arr","_r3","onSelectAllRows","Ng2SmartTableComponent","rowSelect","userRowSelect","defaultSettings","selectMode","hideHeader","hideSubHeader","actions","columnTitle","editButtonContent","confirmSave","addButtonContent","confirmCreate","deleteButtonContent","confirmDelete","attr","pager","display","prepareSettings","initGrid","tableId","tableClass","isPagerDisplay","onMultipleSelectRow","onUserSelectRow","emitUserSelectRow","emitSelectRow","onRowHover","resetAllSelector","selectedRows","selected","Ng2SmartTableModule","ServerSourceConf","_a","_b","_c","endPoint","_d","sortFieldKey","_e","sortDirKey","_f","pagerPageKey","_g","pagerLimitKey","_h","filterFieldKey","_j","totalKey","_k","dataKey","SORT_FIELD_KEY","SORT_DIR_KEY","PAGER_PAGE_KEY","PAGER_LIMIT_KEY","FILTER_FIELD_KEY","TOTAL_KEY","DATA_KEY","ServerDataSource","http","lastRequestCount","requestElements","res","extractTotalFromResponse","extractDataFromResponse","toPromise","rawData","body","headers","has","get","httpParams","createRequesParams","params","observe","HttpParams","addSortRequestParams","addFilterRequestParams","addPagerRequestParams","set","toUpperCase","replace"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import {\r\n  Component,\r\n  Input,\r\n  ComponentFactoryResolver,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  OnInit,\r\n  OnDestroy,\r\n} from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\nimport { ViewCell } from './view-cell';\r\n\r\n@Component({\r\n  selector: 'custom-view-component',\r\n  template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n})\r\nexport class CustomViewComponent implements OnInit, OnDestroy {\r\n\r\n  customComponent: any;\r\n  @Input() cell: Cell;\r\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.cell && !this.customComponent) {\r\n      this.createCustomComponent();\r\n      this.callOnComponentInit();\r\n      this.patchInstance();\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.customComponent) {\r\n      this.customComponent.destroy();\r\n    }\r\n  }\r\n\r\n  protected createCustomComponent() {\r\n    const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().renderComponent);\r\n    this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n  }\r\n\r\n  protected callOnComponentInit() {\r\n    const onComponentInitFunction = this.cell.getColumn().getOnComponentInitFunction();\r\n    onComponentInitFunction && onComponentInitFunction(this.customComponent.instance);\r\n  }\r\n\r\n  protected patchInstance() {\r\n    Object.assign(this.customComponent.instance, this.getPatch());\r\n  }\r\n\r\n  protected getPatch(): ViewCell {\r\n    return {\r\n      value: this.cell.getValue(),\r\n      rowData: this.cell.getRow().getData()\r\n    }\r\n  }\r\n}\r\n","import {Component, Input, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-view-mode',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <div [ngSwitch]=\"cell.getColumn().type\">\r\n        <custom-view-component *ngSwitchCase=\"'custom'\" [cell]=\"cell\"></custom-view-component>\r\n        <div *ngSwitchCase=\"'html'\" [innerHTML]=\"cell.getValue()\"></div>\r\n        <div *ngSwitchDefault>{{ cell.getValue() }}</div>\r\n    </div>\r\n    `,\r\n})\r\nexport class ViewCellComponent {\r\n\r\n  @Input() cell: Cell;\r\n}\r\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  template: ''\r\n})\r\nexport class EditCellDefault {\r\n\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event: any): boolean {\r\n    this.edited.next(event);\r\n    return false;\r\n  }\r\n\r\n  onStopEditing(): boolean {\r\n    this.cell.getRow().isInEditing = false;\r\n    return false;\r\n  }\r\n\r\n  onClick(event: any) {\r\n    event.stopPropagation();\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ComponentFactoryResolver,\r\n  ViewChild,\r\n  ViewContainerRef,\r\n  SimpleChanges,\r\n  OnChanges,\r\n  OnDestroy,\r\n} from '@angular/core';\r\n\r\nimport { EditCellDefault } from './edit-cell-default';\r\n\r\n@Component({\r\n  selector: 'table-cell-custom-editor',\r\n  template: `\r\n    <ng-template #dynamicTarget></ng-template>\r\n  `,\r\n})\r\nexport class CustomEditComponent extends EditCellDefault implements OnChanges, OnDestroy {\r\n\r\n  customComponent: any;\r\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.cell && !this.customComponent) {\r\n      const componentFactory = this.resolver.resolveComponentFactory(this.cell.getColumn().editor.component);\r\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n\r\n      // set @Inputs and @Outputs of custom component\r\n      this.customComponent.instance.cell = this.cell;\r\n      this.customComponent.instance.inputClass = this.inputClass;\r\n      this.customComponent.instance.onStopEditing.subscribe(() => this.onStopEditing());\r\n      this.customComponent.instance.onEdited.subscribe((event: any) => this.onEdited(event));\r\n      this.customComponent.instance.onClick.subscribe((event: any) => this.onClick(event));\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.customComponent) {\r\n      this.customComponent.destroy();\r\n    }\r\n  }\r\n}\r\n","import { Component, Output, EventEmitter, Input } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  template: '',\r\n})\r\nexport class DefaultEditor implements Editor {\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string;\r\n\r\n  @Output() onStopEditing = new EventEmitter<any>();\r\n  @Output() onEdited = new EventEmitter<any>();\r\n  @Output() onClick = new EventEmitter<any>();\r\n}\r\n\r\nexport interface Editor {\r\n  cell: Cell;\r\n  inputClass: string;\r\n  onStopEditing: EventEmitter<any>;\r\n  onEdited: EventEmitter<any>;\r\n  onClick: EventEmitter<any>;\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'select-editor',\r\n  template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            [(ngModel)]=\"cell.newValue\"\r\n            [name]=\"cell.getId()\"\r\n            [disabled]=\"!cell.isEditable()\"\r\n            (click)=\"onClick.emit($event)\"\r\n            (keydown.enter)=\"onEdited.emit($event)\"\r\n            (keydown.esc)=\"onStopEditing.emit()\">\r\n\r\n        <option *ngFor=\"let option of cell.getColumn().getConfig()?.list\" [value]=\"option.value\"\r\n                [selected]=\"option.value === cell.getValue()\">{{ option.title }}\r\n        </option>\r\n    </select>\r\n    `,\r\n})\r\nexport class SelectEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'textarea-editor',\r\n  styleUrls: ['./editor.component.scss'],\r\n  template: `\r\n    <textarea [ngClass]=\"inputClass\"\r\n              class=\"form-control\"\r\n              [(ngModel)]=\"cell.newValue\"\r\n              [name]=\"cell.getId()\"\r\n              [disabled]=\"!cell.isEditable()\"\r\n              [placeholder]=\"cell.getTitle()\"\r\n              (click)=\"onClick.emit($event)\"\r\n              (keydown.enter)=\"onEdited.emit($event)\"\r\n              (keydown.esc)=\"onStopEditing.emit()\">\r\n    </textarea>\r\n    `,\r\n})\r\nexport class TextareaEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'checkbox-editor',\r\n  styleUrls: ['./editor.component.scss'],\r\n  template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           type=\"checkbox\"\r\n           class=\"form-control\"\r\n           [name]=\"cell.getId()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           [checked]=\"cell.getValue() == (cell.getColumn().getConfig()?.true || true)\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (change)=\"onChange($event)\">\r\n    `,\r\n})\r\nexport class CheckboxEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  onChange(event: any) {\r\n    const trueVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().true) || true;\r\n    const falseVal = (this.cell.getColumn().getConfig() && this.cell.getColumn().getConfig().false) || false;\r\n    this.cell.newValue = event.target.checked ? trueVal : falseVal;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { CompleterService } from '@akveo/ng2-completer';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'completer-editor',\r\n  template: `\r\n    <ng2-completer [(ngModel)]=\"completerStr\"\r\n                   [dataService]=\"cell.getColumn().getConfig().completer.dataService\"\r\n                   [minSearchLength]=\"cell.getColumn().getConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"cell.getColumn().getConfig().completer.pause || 0\"\r\n                   [placeholder]=\"cell.getColumn().getConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"onEditedCompleter($event)\">\r\n    </ng2-completer>\r\n    `,\r\n})\r\nexport class CompleterEditorComponent extends DefaultEditor implements OnInit {\r\n\r\n  completerStr: string = '';\r\n\r\n  constructor(private completerService: CompleterService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.cell.getColumn().editor && this.cell.getColumn().editor.type === 'completer') {\r\n      const config = this.cell.getColumn().getConfig().completer;\r\n      config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n      config.dataService.descriptionField(config.descriptionField);\r\n    }\r\n  }\r\n\r\n  onEditedCompleter(event: { title: '' }): boolean {\r\n    this.cell.newValue = event.title;\r\n    return false;\r\n  }\r\n}\r\n","import { Component } from '@angular/core';\r\n\r\nimport { DefaultEditor } from './default-editor';\r\n\r\n@Component({\r\n  selector: 'input-editor',\r\n  styleUrls: ['./editor.component.scss'],\r\n  template: `\r\n    <input [ngClass]=\"inputClass\"\r\n           class=\"form-control\"\r\n           [(ngModel)]=\"cell.newValue\"\r\n           [name]=\"cell.getId()\"\r\n           [placeholder]=\"cell.getTitle()\"\r\n           [disabled]=\"!cell.isEditable()\"\r\n           (click)=\"onClick.emit($event)\"\r\n           (keydown.enter)=\"onEdited.emit($event)\"\r\n           (keydown.esc)=\"onStopEditing.emit()\">\r\n    `,\r\n})\r\nexport class InputEditorComponent extends DefaultEditor {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n}\r\n","<div [ngSwitch]=\"getEditorType()\">\r\n    <select-editor *ngSwitchCase=\"'list'\"\r\n                   [cell]=\"cell\"\r\n                   [inputClass]=\"inputClass\"\r\n                   (onClick)=\"onClick($event)\"\r\n                   (onEdited)=\"onEdited($event)\"\r\n                   (onStopEditing)=\"onStopEditing()\">\r\n    </select-editor>\r\n\r\n    <textarea-editor *ngSwitchCase=\"'textarea'\"\r\n                     [cell]=\"cell\"\r\n                     [inputClass]=\"inputClass\"\r\n                     (onClick)=\"onClick($event)\"\r\n                     (onEdited)=\"onEdited($event)\"\r\n                     (onStopEditing)=\"onStopEditing()\">\r\n    </textarea-editor>\r\n\r\n    <checkbox-editor *ngSwitchCase=\"'checkbox'\"\r\n                     [cell]=\"cell\"\r\n                     [inputClass]=\"inputClass\"\r\n                     (onClick)=\"onClick($event)\">\r\n    </checkbox-editor>\r\n\r\n    <completer-editor *ngSwitchCase=\"'completer'\"\r\n                      [cell]=\"cell\">\r\n    </completer-editor>\r\n\r\n    <input-editor *ngSwitchDefault\r\n                  [cell]=\"cell\"\r\n                  [inputClass]=\"inputClass\"\r\n                  (onClick)=\"onClick($event)\"\r\n                  (onEdited)=\"onEdited($event)\"\r\n                  (onStopEditing)=\"onStopEditing()\">\r\n    </input-editor>\r\n</div>","import { Component } from '@angular/core';\r\n\r\nimport { EditCellDefault } from './edit-cell-default';\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-default-editor',\r\n  templateUrl: './default-edit.component.html',\r\n})\r\nexport class DefaultEditComponent extends EditCellDefault {\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  getEditorType(): string {\r\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Cell } from '../../../lib/data-set/cell';\r\n\r\n@Component({\r\n  selector: 'table-cell-edit-mode',\r\n  template: `\r\n      <div [ngSwitch]=\"getEditorType()\">\r\n        <table-cell-custom-editor *ngSwitchCase=\"'custom'\"\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"onEdited($event)\">\r\n        </table-cell-custom-editor>\r\n        <table-cell-default-editor *ngSwitchDefault\r\n                                  [cell]=\"cell\"\r\n                                  [inputClass]=\"inputClass\"\r\n                                  (edited)=\"onEdited($event)\">\r\n        </table-cell-default-editor>\r\n      </div>\r\n    `,\r\n})\r\nexport class EditCellComponent {\r\n\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event: any): boolean {\r\n    this.edited.next(event);\r\n    return false;\r\n  }\r\n\r\n  getEditorType(): string {\r\n    return this.cell.getColumn().editor && this.cell.getColumn().editor.type;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Grid } from '../../lib/grid';\r\nimport { Cell } from '../../lib/data-set/cell';\r\nimport { Row } from '../../lib/data-set/row';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-cell',\r\n  template: `\r\n    <table-cell-view-mode *ngIf=\"!isInEditing\" [cell]=\"cell\"></table-cell-view-mode>\r\n    <table-cell-edit-mode *ngIf=\"isInEditing\" [cell]=\"cell\"\r\n                          [inputClass]=\"inputClass\"\r\n                          (edited)=\"onEdited($event)\">\r\n    </table-cell-edit-mode>\r\n  `,\r\n})\r\nexport class CellComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n  @Input() createConfirm: EventEmitter<any>;\r\n  @Input() isNew: boolean;\r\n  @Input() cell: Cell;\r\n  @Input() inputClass: string = '';\r\n  @Input() mode: string = 'inline';\r\n  @Input() isInEditing: boolean = false;\r\n\r\n  @Output() edited = new EventEmitter<any>();\r\n\r\n  onEdited(event: any) {\r\n    if (this.isNew) {\r\n      this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n    } else {\r\n      this.grid.save(this.row, this.editConfirm);\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { Ng2CompleterModule } from '@akveo/ng2-completer';\r\n\r\nimport { CellComponent } from './cell.component';\r\nimport { CustomEditComponent } from './cell-edit-mode/custom-edit.component';\r\nimport { DefaultEditComponent } from './cell-edit-mode/default-edit.component';\r\nimport { EditCellComponent } from './cell-edit-mode/edit-cell.component';\r\nimport { CheckboxEditorComponent } from './cell-editors/checkbox-editor.component';\r\nimport { CompleterEditorComponent } from './cell-editors/completer-editor.component';\r\nimport { InputEditorComponent } from './cell-editors/input-editor.component';\r\nimport { SelectEditorComponent } from './cell-editors/select-editor.component';\r\nimport { TextareaEditorComponent } from './cell-editors/textarea-editor.component';\r\nimport { CustomViewComponent } from './cell-view-mode/custom-view.component';\r\nimport { ViewCellComponent } from './cell-view-mode/view-cell.component';\r\nimport { EditCellDefault } from './cell-edit-mode/edit-cell-default';\r\nimport { DefaultEditor } from './cell-editors/default-editor';\r\n\r\nconst CELL_COMPONENTS = [\r\n  CellComponent,\r\n  EditCellDefault,\r\n  DefaultEditor,\r\n  CustomEditComponent,\r\n  DefaultEditComponent,\r\n  EditCellComponent,\r\n  CheckboxEditorComponent,\r\n  CompleterEditorComponent,\r\n  InputEditorComponent,\r\n  SelectEditorComponent,\r\n  TextareaEditorComponent,\r\n  CustomViewComponent,\r\n  ViewCellComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    Ng2CompleterModule,\r\n  ],\r\n  declarations: [\r\n    ...CELL_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...CELL_COMPONENTS,\r\n  ],\r\n})\r\nexport class CellModule { }\r\n","import { Output, EventEmitter, Input, Component } from '@angular/core';\r\n\r\nimport { Column } from '../../lib/data-set/column';\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  template: '',\r\n})\r\nexport class FilterDefault {\r\n\r\n  @Input() column: Column;\r\n  @Input() source: DataSource;\r\n  @Input() inputClass: string = '';\r\n\r\n  @Output() filter = new EventEmitter<any>();\r\n\r\n  query: string = '';\r\n\r\n  onFilter(query: string) {\r\n    this.source.addFilter({\r\n      field: this.column.id,\r\n      search: query,\r\n      filter: this.column.getFilterFunction(),\r\n    });\r\n  }\r\n}\r\n","import {\r\n  Component,\r\n  ComponentFactoryResolver, Input,\r\n  OnChanges,\r\n  OnDestroy,\r\n  SimpleChanges,\r\n  ViewChild,\r\n  ViewContainerRef\r\n} from '@angular/core';\r\n\r\nimport { FilterDefault } from './filter-default';\r\n\r\n@Component({\r\n  selector: 'custom-table-filter',\r\n  template: `<ng-template #dynamicTarget></ng-template>`,\r\n})\r\nexport class CustomFilterComponent extends FilterDefault implements OnChanges, OnDestroy {\r\n  @Input() query: string;\r\n  customComponent: any;\r\n  @ViewChild('dynamicTarget', { read: ViewContainerRef, static: true }) dynamicTarget: any;\r\n\r\n  constructor(private resolver: ComponentFactoryResolver) {\r\n    super();\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.column && !this.customComponent) {\r\n      const componentFactory = this.resolver.resolveComponentFactory(this.column.filter.component);\r\n      this.customComponent = this.dynamicTarget.createComponent(componentFactory);\r\n\r\n      // set @Inputs and @Outputs of custom component\r\n      this.customComponent.instance.query = this.query;\r\n      this.customComponent.instance.column = this.column;\r\n      this.customComponent.instance.source = this.source;\r\n      this.customComponent.instance.inputClass = this.inputClass;\r\n      this.customComponent.instance.filter.subscribe((event: any) => this.onFilter(event));\r\n    }\r\n    if (this.customComponent) {\r\n      this.customComponent.instance.ngOnChanges(changes);\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.customComponent) {\r\n      this.customComponent.destroy();\r\n    }\r\n  }\r\n}\r\n","import { Input, Output, EventEmitter, OnDestroy, Component } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { Column } from '../../../lib/data-set/column';\r\n\r\n@Component({\r\n  template: '',\r\n})\r\nexport class DefaultFilter implements Filter, OnDestroy {\r\n\r\n  delay: number = 300;\r\n  changesSubscription: Subscription;\r\n  @Input() query: string;\r\n  @Input() inputClass: string;\r\n  @Input() column: Column;\r\n  @Output() filter = new EventEmitter<string>();\r\n\r\n  ngOnDestroy() {\r\n    if (this.changesSubscription) {\r\n      this.changesSubscription.unsubscribe();\r\n    }\r\n  }\r\n\r\n  setFilter() {\r\n    this.filter.emit(this.query);\r\n  }\r\n}\r\n\r\nexport interface Filter {\r\n\r\n  delay?: number;\r\n  changesSubscription?: Subscription;\r\n  query: string;\r\n  inputClass: string;\r\n  column: Column;\r\n  filter: EventEmitter<string>;\r\n}\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgControl } from '@angular/forms';\r\nimport { distinctUntilChanged, debounceTime, skip } from 'rxjs/operators';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\n\r\n@Component({\r\n  selector: 'select-filter',\r\n  template: `\r\n    <select [ngClass]=\"inputClass\"\r\n            class=\"form-control\"\r\n            #inputControl\r\n            [(ngModel)]=\"query\">\r\n\r\n        <option value=\"\">{{ column.getFilterConfig().selectText }}</option>\r\n        <option *ngFor=\"let option of column.getFilterConfig().list\" [value]=\"option.value\">\r\n          {{ option.title }}\r\n        </option>\r\n    </select>\r\n  `,\r\n})\r\nexport class SelectFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  @ViewChild('inputControl', { read: NgControl, static: true }) inputControl: NgControl;\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.inputControl.valueChanges\r\n      .pipe(\r\n        skip(1),\r\n        distinctUntilChanged(),\r\n        debounceTime(this.delay)\r\n      )\r\n      .subscribe((value: string) => this.setFilter());\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'checkbox-filter',\r\n  template: `\r\n    <input type=\"checkbox\" [formControl]=\"inputControl\" [ngClass]=\"inputClass\" class=\"form-control\">\r\n    <a href=\"#\" *ngIf=\"filterActive\"\r\n                (click)=\"resetFilter($event)\">{{column.getFilterConfig()?.resetText || 'reset'}}</a>\r\n  `,\r\n})\r\nexport class CheckboxFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  filterActive: boolean = false;\r\n  inputControl = new FormControl();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.changesSubscription = this.inputControl.valueChanges\r\n      .pipe(debounceTime(this.delay))\r\n      .subscribe((checked: boolean) => {\r\n        this.filterActive = true;\r\n        const trueVal = (this.column.getFilterConfig() && this.column.getFilterConfig().true) || true;\r\n        const falseVal = (this.column.getFilterConfig() && this.column.getFilterConfig().false) || false;\r\n        this.query = checked ? trueVal : falseVal;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  resetFilter(event: any) {\r\n    event.preventDefault();\r\n    this.query = '';\r\n    this.inputControl.setValue(false, { emitEvent: false });\r\n    this.filterActive = false;\r\n    this.setFilter();\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { CompleterService } from '@akveo/ng2-completer';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\nimport { distinctUntilChanged, debounceTime, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'completer-filter',\r\n  template: `\r\n    <ng2-completer [(ngModel)]=\"query\"\r\n                   (ngModelChange)=\"inputTextChanged($event)\"\r\n                   [dataService]=\"column.getFilterConfig().completer.dataService\"\r\n                   [minSearchLength]=\"column.getFilterConfig().completer.minSearchLength || 0\"\r\n                   [pause]=\"column.getFilterConfig().completer.pause || 0\"\r\n                   [placeholder]=\"column.getFilterConfig().completer.placeholder || 'Start typing...'\"\r\n                   (selected)=\"completerContent.next($event)\">\r\n    </ng2-completer>\r\n  `,\r\n})\r\nexport class CompleterFilterComponent extends DefaultFilter implements OnInit {\r\n\r\n  completerContent = new Subject<any>();\r\n\r\n  constructor(private completerService: CompleterService) {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    const config = this.column.getFilterConfig().completer;\r\n    config.dataService = this.completerService.local(config.data, config.searchFields, config.titleField);\r\n    config.dataService.descriptionField(config.descriptionField);\r\n\r\n    this.changesSubscription = this.completerContent\r\n      .pipe(\r\n        map((ev: any) => (ev && ev.title) || ev || ''),\r\n        distinctUntilChanged(),\r\n        debounceTime(this.delay)\r\n      )\r\n      .subscribe((search: string) => {\r\n        this.query = search;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  inputTextChanged(event: string) {\r\n    // workaround to trigger the search event when the home/end buttons are clicked\r\n    // when this happens the [(ngModel)]=\"query\" is set to \"\" but the (selected) method is not called\r\n    // so here it gets called manually\r\n    if (event === '') {\r\n      this.completerContent.next(event);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnChanges, OnInit, SimpleChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { debounceTime, distinctUntilChanged, skip } from 'rxjs/operators';\r\n\r\nimport { DefaultFilter } from './default-filter';\r\n\r\n@Component({\r\n  selector: 'input-filter',\r\n  template: `\r\n    <input\r\n      [ngClass]=\"inputClass\"\r\n      [formControl]=\"inputControl\"\r\n      class=\"form-control\"\r\n      type=\"text\"\r\n      placeholder=\"{{ column.title }}\"/>\r\n  `,\r\n})\r\nexport class InputFilterComponent extends DefaultFilter implements OnInit, OnChanges {\r\n\r\n  inputControl = new FormControl();\r\n\r\n  constructor() {\r\n    super();\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (this.query) {\r\n      this.inputControl.setValue(this.query);\r\n    }\r\n    this.inputControl.valueChanges\r\n      .pipe(\r\n        distinctUntilChanged(),\r\n        debounceTime(this.delay),\r\n      )\r\n      .subscribe((value: string) => {\r\n        this.query = this.inputControl.value;\r\n        this.setFilter();\r\n      });\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.query) {\r\n      this.inputControl.setValue(this.query);\r\n    }\r\n  }\r\n}\r\n","import {Component, Input} from '@angular/core';\r\n\r\nimport {FilterDefault} from \"./filter-default\";\r\n\r\n@Component({\r\n  selector: 'default-table-filter',\r\n  template: `\r\n    <ng-container [ngSwitch]=\"column.getFilterType()\">\r\n      <select-filter *ngSwitchCase=\"'list'\"\r\n                     [query]=\"query\"\r\n                     [ngClass]=\"inputClass\"\r\n                     [column]=\"column\"\r\n                     (filter)=\"onFilter($event)\">\r\n      </select-filter>\r\n      <checkbox-filter *ngSwitchCase=\"'checkbox'\"\r\n                       [query]=\"query\"\r\n                       [ngClass]=\"inputClass\"\r\n                       [column]=\"column\"\r\n                       (filter)=\"onFilter($event)\">\r\n      </checkbox-filter>\r\n      <completer-filter *ngSwitchCase=\"'completer'\"\r\n                        [query]=\"query\"\r\n                        [ngClass]=\"inputClass\"\r\n                        [column]=\"column\"\r\n                        (filter)=\"onFilter($event)\">\r\n      </completer-filter>\r\n      <input-filter *ngSwitchDefault\r\n                    [query]=\"query\"\r\n                    [ngClass]=\"inputClass\"\r\n                    [column]=\"column\"\r\n                    (filter)=\"onFilter($event)\">\r\n      </input-filter>\r\n    </ng-container>\r\n  `,\r\n})\r\nexport class DefaultFilterComponent extends FilterDefault {\r\n  @Input() query: string;\r\n}\r\n","import { Component, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FilterDefault } from './filter-default';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-filter',\r\n  styleUrls: ['./filter.component.scss'],\r\n  template: `\r\n      <div class=\"ng2-smart-filter\" *ngIf=\"column.isFilterable\" [ngSwitch]=\"column.getFilterType()\">\r\n        <custom-table-filter *ngSwitchCase=\"'custom'\"\r\n                             [query]=\"query\"\r\n                             [column]=\"column\"\r\n                             [source]=\"source\"\r\n                             [inputClass]=\"inputClass\"\r\n                             (filter)=\"onFilter($event)\">\r\n        </custom-table-filter>\r\n        <default-table-filter *ngSwitchDefault\r\n                              [query]=\"query\"\r\n                              [column]=\"column\"\r\n                              [source]=\"source\"\r\n                              [inputClass]=\"inputClass\"\r\n                              (filter)=\"onFilter($event)\">\r\n        </default-table-filter>\r\n      </div>\r\n    `,\r\n})\r\nexport class FilterComponent extends FilterDefault implements OnChanges {\r\n  query: string = '';\r\n  protected dataChangedSub: Subscription;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.source) {\r\n      if (!changes.source.firstChange) {\r\n        this.dataChangedSub.unsubscribe();\r\n      }\r\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n        const filterConf = this.source.getFilter();\r\n        if (filterConf && filterConf.filters && filterConf.filters.length === 0) {\r\n          this.query = '';\r\n\r\n          // add a check for existing filters an set the query if one exists for this column\r\n          // this covers instances where the filter is set by user code while maintaining existing functionality\r\n        } else if (filterConf && filterConf.filters && filterConf.filters.length > 0) {\r\n          filterConf.filters.forEach((k: any, v: any) => {\r\n            if (k.field == this.column.id) {\r\n              this.query = k.search;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { Ng2CompleterModule } from '@akveo/ng2-completer';\r\n\r\nimport { FilterComponent } from './filter.component';\r\nimport { DefaultFilterComponent } from \"./default-filter.component\";\r\nimport { CustomFilterComponent } from \"./custom-filter.component\";\r\nimport { CheckboxFilterComponent } from './filter-types/checkbox-filter.component';\r\nimport { CompleterFilterComponent } from './filter-types/completer-filter.component';\r\nimport { InputFilterComponent } from './filter-types/input-filter.component';\r\nimport { SelectFilterComponent } from './filter-types/select-filter.component';\r\nimport { DefaultFilter } from './filter-types/default-filter';\r\nimport { FilterDefault } from './filter-default';\r\n\r\nconst FILTER_COMPONENTS = [\r\n  FilterDefault,\r\n  DefaultFilter,\r\n  FilterComponent,\r\n  DefaultFilterComponent,\r\n  CustomFilterComponent,\r\n  CheckboxFilterComponent,\r\n  CompleterFilterComponent,\r\n  InputFilterComponent,\r\n  SelectFilterComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    Ng2CompleterModule,\r\n  ],\r\n  declarations: [\r\n    ...FILTER_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...FILTER_COMPONENTS,\r\n  ],\r\n})\r\nexport class FilterModule { }\r\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-pager',\r\n  styleUrls: ['./pager.component.scss'],\r\n  template: `\r\n<div *ngIf=\"shouldShow()\" class=\"col-sm-6 pagination-count\">\r\n<p>\r\n{{showing}} <strong>{{(page-1)*perPage+1}}</strong> {{to}} \r\n<strong>{{(page*perPage) > count?count:(page*perPage)}}</strong> {{of}} {{count}} {{entries}}</p>\r\n</div>\r\n    <nav *ngIf=\"shouldShow()\" class=\"ng2-smart-pagination-nav\">\r\n      <ul class=\"ng2-smart-pagination pagination\">\r\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == 1 ? false : paginate(1)\" aria-label=\"First\">\r\n            <span aria-hidden=\"true\">&laquo;</span>\r\n            <span class=\"sr-only\">First</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"ng2-smart-page-item page-item\" [ngClass]=\"{disabled: getPage() == 1}\">\r\n          <a class=\"ng2-smart-page-link page-link page-link-prev\" href=\"#\"\r\n             (click)=\"getPage() == 1 ? false : prev()\" aria-label=\"Prev\">\r\n            <span aria-hidden=\"true\">&lt;</span>\r\n            <span class=\"sr-only\">Prev</span>\r\n          </a>\r\n        </li>\r\n        <li class=\"ng2-smart-page-item page-item\"\r\n        [ngClass]=\"{active: getPage() == page}\" *ngFor=\"let page of getPages()\">\r\n          <span class=\"ng2-smart-page-link page-link\"\r\n          *ngIf=\"getPage() == page\">{{ page }} <span class=\"sr-only\">(current)</span></span>\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"paginate(page)\" *ngIf=\"getPage() != page\">{{ page }}</a>\r\n        </li>\r\n\r\n        <li class=\"ng2-smart-page-item page-item\"\r\n            [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"ng2-smart-page-link page-link page-link-next\" href=\"#\"\r\n             (click)=\"getPage() == getLast() ? false : next()\" aria-label=\"Next\">\r\n            <span aria-hidden=\"true\">&gt;</span>\r\n            <span class=\"sr-only\">Next</span>\r\n          </a>\r\n        </li>\r\n        \r\n        <li class=\"ng2-smart-page-item page-item\"\r\n        [ngClass]=\"{disabled: getPage() == getLast()}\">\r\n          <a class=\"ng2-smart-page-link page-link\" href=\"#\"\r\n          (click)=\"getPage() == getLast() ? false : paginate(getLast())\" aria-label=\"Last\">\r\n            <span aria-hidden=\"true\">&raquo;</span>\r\n            <span class=\"sr-only\">Last</span>\r\n          </a>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n    \r\n    <nav *ngIf=\"perPageSelect && perPageSelect.length > 0\" class=\"ng2-smart-pagination-per-page\">\r\n      <label for=\"per-page\">\r\n        Per Page:\r\n      </label>\r\n      <select (change)=\"onChangePerPage($event)\" [(ngModel)]=\"currentPerPage\" id=\"per-page\">\r\n        <option *ngFor=\"let item of perPageSelect\" [value]=\"item\">{{ item }}</option>\r\n      </select>\r\n    </nav>\r\n  `,\r\n})\r\nexport class PagerComponent implements OnChanges {\r\npublic showing=\"Showing\";\r\npublic to = \"to\";\r\npublic of = \"of\";\r\npublic entries = \"entries\";\r\n  constructor(){\r\n    let langContent = localStorage.getItem(\"getContent\");\r\n    if(langContent){\r\n      const lngobj = JSON.parse(langContent);\r\n      if(\"common\" in lngobj){\r\n        const common = lngobj.common;\r\n        if((\"paginationContentKey1\" in common) &&\r\n        (\"paginationContentKey2\" in common) &&\r\n        (\"paginationContentKey3\" in common) &&\r\n        (\"paginationContentKey5\" in common) ){\r\n          this.showing = common.paginationContentKey1;\r\n          this.to = common.paginationContentKey2;\r\n          this.of = common.paginationContentKey3;\r\n          this.entries = common.paginationContentKey5;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  @Input() source: DataSource;\r\n  @Input() perPageSelect: any[] = [];\r\n\r\n  @Output() changePage = new EventEmitter<any>();\r\n\r\n  currentPerPage: any;\r\n\r\n  public pages: Array<any>;\r\n  public page: number;\r\n  public count: number = 0;\r\n  public perPage: number;\r\n\r\n  protected dataChangedSub: Subscription;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.source) {\r\n      if (!changes.source.firstChange) {\r\n        this.dataChangedSub.unsubscribe();\r\n      }\r\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n        this.page = this.source.getPaging().page;\r\n        this.perPage = this.source.getPaging().perPage;\r\n        this.currentPerPage = this.perPage;\r\n        this.count = this.source.count();\r\n        if (this.isPageOutOfBounce()) {\r\n          this.source.setPage(--this.page);\r\n        }\r\n\r\n        this.processPageChange(dataChanges);\r\n        this.initPages();\r\n      });\r\n    }\r\n  }\r\n\r\n  /**\r\n   * We change the page here depending on the action performed against data source\r\n   * if a new element was added to the end of the table - then change the page to the last\r\n   * if a new element was added to the beginning of the table - then to the first page\r\n   * @param changes\r\n   */\r\n  processPageChange(changes: any) {\r\n    if (changes['action'] === 'prepend') {\r\n      this.source.setPage(1);\r\n    }\r\n    if (changes['action'] === 'append') {\r\n      this.source.setPage(this.getLast());\r\n    }\r\n  }\r\n\r\n  shouldShow(): boolean {\r\n    return this.source.count() > this.perPage;\r\n  }\r\n\r\n  paginate(page: number): boolean {\r\n    this.source.setPage(page);\r\n    this.page = page;\r\n    this.changePage.emit({ page });\r\n    return false;\r\n  }\r\n\r\n  next(): boolean {\r\n    return this.paginate(this.getPage() + 1);\r\n  }\r\n\r\n  prev(): boolean {\r\n    return this.paginate(this.getPage() - 1);\r\n  }\r\n\r\n  getPage(): number {\r\n    return this.page;\r\n  }\r\n\r\n  getPages(): Array<any> {\r\n    return this.pages;\r\n  }\r\n\r\n  getLast(): number {\r\n    return Math.ceil(this.count / this.perPage);\r\n  }\r\n\r\n  isPageOutOfBounce(): boolean {\r\n    return (this.page * this.perPage) >= (this.count + this.perPage) && this.page > 1;\r\n  }\r\n\r\n  initPages() {\r\n    const pagesCount = this.getLast();\r\n    let showPagesCount = 4;\r\n    showPagesCount = pagesCount < showPagesCount ? pagesCount : showPagesCount;\r\n    this.pages = [];\r\n\r\n    if (this.shouldShow()) {\r\n\r\n      let middleOne = Math.ceil(showPagesCount / 2);\r\n      middleOne = this.page >= middleOne ? this.page : middleOne;\r\n\r\n      let lastOne = middleOne + Math.floor(showPagesCount / 2);\r\n      lastOne = lastOne >= pagesCount ? pagesCount : lastOne;\r\n\r\n      const firstOne = lastOne - showPagesCount + 1;\r\n\r\n      for (let i = firstOne; i <= lastOne; i++) {\r\n        this.pages.push(i);\r\n      }\r\n    }\r\n  }\r\n\r\n  onChangePerPage(event: any) {\r\n    if (this.currentPerPage) {\r\n\r\n      if (typeof this.currentPerPage === 'string' && this.currentPerPage.toLowerCase() === 'all') {\r\n        this.source.getPaging().perPage = null;\r\n      } else {\r\n        this.source.getPaging().perPage = this.currentPerPage * 1;\r\n        this.source.refresh();\r\n      }\r\n      this.initPages();\r\n    }\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { PagerComponent } from './pager.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n  ],\r\n  declarations: [\r\n    PagerComponent,\r\n  ],\r\n  exports: [\r\n    PagerComponent,\r\n  ],\r\n})\r\nexport class PagerModule { }\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\nimport { Row } from '../../../lib/data-set/row';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n    selector: 'ng2-st-tbody-custom',\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    template: `\r\n      <a *ngFor=\"let action of grid.getSetting('actions.custom')\" href=\"#\"\r\n         class=\"ng2-smart-action ng2-smart-action-custom-custom\" \r\n         [innerHTML]=\"action.title\"\r\n         (click)=\"onCustom(action, $event)\"></a>\r\n        `\r\n})\r\nexport class TbodyCustomComponent {\r\n\r\n    @Input() grid: Grid;\r\n    @Input() row: Row;\r\n    @Input() source: any;\r\n    @Output() custom = new EventEmitter<any>();\r\n\r\n    onCustom(action: any, event: any) {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n\r\n        this.custom.emit({\r\n            action: action.name,\r\n            data: this.row.getData(),\r\n            source: this.source\r\n        });\r\n    }\r\n\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges, ChangeDetectionStrategy } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-st-tbody-edit-delete',\r\n  changeDetection: ChangeDetectionStrategy.OnPush,\r\n  template: `\r\n    <a href=\"#\" *ngIf=\"isActionEdit\" class=\"ng2-smart-action ng2-smart-action-edit-edit\"\r\n        [innerHTML]=\"editRowButtonContent\" (click)=\"onEdit($event)\"></a>\r\n    <a href=\"#\" *ngIf=\"isActionDelete\" class=\"ng2-smart-action ng2-smart-action-delete-delete\"\r\n        [innerHTML]=\"deleteRowButtonContent\" (click)=\"onDelete($event)\"></a>\r\n  `,\r\n})\r\nexport class TbodyEditDeleteComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() source: DataSource;\r\n  @Input() deleteConfirm: EventEmitter<any>;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n\r\n  @Output() edit = new EventEmitter<any>();\r\n  @Output() delete = new EventEmitter<any>();\r\n  @Output() editRowSelect = new EventEmitter<any>();\r\n\r\n  isActionEdit: boolean;\r\n  isActionDelete: boolean;\r\n  editRowButtonContent: string;\r\n  deleteRowButtonContent: string;\r\n\r\n  onEdit(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.editRowSelect.emit(this.row);\r\n\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.edit.emit({\r\n        data: this.row.getData(),\r\n        source: this.source,\r\n      });\r\n    } else {\r\n      this.grid.edit(this.row);\r\n    }\r\n  }\r\n\r\n  onDelete(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.delete.emit({\r\n        data: this.row.getData(),\r\n        source: this.source,\r\n      });\r\n    } else {\r\n      this.grid.delete(this.row, this.deleteConfirm);\r\n    }\r\n  }\r\n\r\n  ngOnChanges(){\r\n    this.isActionEdit = this.grid.getSetting('actions.edit');\r\n    this.isActionDelete = this.grid.getSetting('actions.delete');\r\n    this.editRowButtonContent = this.grid.getSetting('edit.editButtonContent');\r\n    this.deleteRowButtonContent = this.grid.getSetting('delete.deleteButtonContent');\r\n  }\r\n}\r\n","import { Component, Input, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\n\r\n@Component({\r\n  selector: 'ng2-st-tbody-create-cancel',\r\n  template: `\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-save\"\r\n        [innerHTML]=\"saveButtonContent\" (click)=\"onSave($event)\"></a>\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-edit-cancel\"\r\n        [innerHTML]=\"cancelButtonContent\" (click)=\"onCancelEdit($event)\"></a>\r\n  `,\r\n})\r\nexport class TbodyCreateCancelComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n\r\n  cancelButtonContent: string;\r\n  saveButtonContent: string;\r\n\r\n  onSave(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.grid.save(this.row, this.editConfirm);\r\n  }\r\n\r\n  onCancelEdit(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n\r\n    this.row.isInEditing = false;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.saveButtonContent = this.grid.getSetting('edit.saveButtonContent');\r\n    this.cancelButtonContent = this.grid.getSetting('edit.cancelButtonContent')\r\n  }\r\n}\r\n","<tr *ngFor=\"let row of grid.getRows()\" (click)=\"userSelectRow.emit(row)\" (mouseover)=\"rowHover.emit(row)\" class=\"ng2-smart-row\" [className]=\"rowClassFunction(row)\" [ngClass]=\"{selected: row.isSelected}\">\r\n  <td *ngIf=\"isMultiSelectVisible\" class=\"ng2-smart-actions ng2-smart-action-multiple-select\" (click)=\"multipleSelectRow.emit(row)\">\r\n    <input type=\"checkbox\" class=\"form-control\" [ngModel]=\"row.isSelected\">\r\n  </td>\r\n  <td *ngIf=\"!row.isInEditing && showActionColumnLeft\" class=\"ng2-smart-actions\">\r\n    <ng2-st-tbody-custom [grid]=\"grid\" (custom)=\"custom.emit($event)\" [row]=\"row\" [source]=\"source\"></ng2-st-tbody-custom>\r\n\r\n    <ng2-st-tbody-edit-delete [grid]=\"grid\"\r\n                              [deleteConfirm]=\"deleteConfirm\"\r\n                              [editConfirm]=\"editConfirm\"\r\n                              (edit)=\"edit.emit(row)\"\r\n                              (delete)=\"delete.emit(row)\"\r\n                              (editRowSelect)=\"editRowSelect.emit($event)\"\r\n                              [row]=\"row\"\r\n                              [source]=\"source\">\r\n    </ng2-st-tbody-edit-delete>\r\n  </td>\r\n   <td *ngIf=\"row.isInEditing && showActionColumnLeft\"  class=\"ng2-smart-actions\">\r\n    <ng2-st-tbody-create-cancel [grid]=\"grid\" [row]=\"row\" [editConfirm]=\"editConfirm\"></ng2-st-tbody-create-cancel>\r\n  </td>\r\n  <td *ngFor=\"let cell of row.cells\">\r\n    <ng2-smart-table-cell [cell]=\"cell\"\r\n                          [grid]=\"grid\"\r\n                          [row]=\"row\"\r\n                          [isNew]=\"false\"\r\n                          [mode]=\"mode\"\r\n                          [editConfirm]=\"editConfirm\"\r\n                          [inputClass]=\"editInputClass\"\r\n                          [isInEditing]=\"row.isInEditing\">\r\n    </ng2-smart-table-cell>\r\n  </td>\r\n\r\n  <td *ngIf=\"row.isInEditing && showActionColumnRight\"  class=\"ng2-smart-actions\">\r\n    <ng2-st-tbody-create-cancel [grid]=\"grid\" [row]=\"row\" [editConfirm]=\"editConfirm\"></ng2-st-tbody-create-cancel>\r\n  </td>\r\n\r\n  <td *ngIf=\"!row.isInEditing && showActionColumnRight\" class=\"ng2-smart-actions\">\r\n    <ng2-st-tbody-custom [grid]=\"grid\" (custom)=\"custom.emit($event)\" [row]=\"row\" [source]=\"source\"></ng2-st-tbody-custom>\r\n\r\n    <ng2-st-tbody-edit-delete [grid]=\"grid\"\r\n                              [deleteConfirm]=\"deleteConfirm\"\r\n                              [editConfirm]=\"editConfirm\"\r\n                              [row]=\"row\"\r\n                              [source]=\"source\"\r\n                              (edit)=\"edit.emit(row)\"\r\n                              (delete)=\"delete.emit(row)\"\r\n                              (editRowSelect)=\"editRowSelect.emit($event)\">\r\n    </ng2-st-tbody-edit-delete>\r\n  </td>\r\n</tr>\r\n\r\n<tr *ngIf=\"grid.getRows().length == 0\">\r\n  <td [attr.colspan]=\"tableColumnsCount\">\r\n    {{ noDataMessage }}\r\n  </td>\r\n</tr>\r\n","import {Component, Input, Output, EventEmitter, } from '@angular/core';\r\n\r\nimport { Grid } from '../../lib/grid';\r\nimport { Row } from '../../lib/data-set/row';\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\nimport {Column} from \"../../lib/data-set/column\";\r\n\r\n@Component({\r\n  selector: '[ng2-st-tbody]',\r\n  styleUrls: ['./tbody.component.scss'],\r\n  templateUrl: './tbody.component.html',\r\n})\r\nexport class Ng2SmartTableTbodyComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n  @Input() deleteConfirm: EventEmitter<any>;\r\n  @Input() editConfirm: EventEmitter<any>;\r\n  @Input() rowClassFunction: Function;\r\n\r\n  @Output() save = new EventEmitter<any>();\r\n  @Output() cancel = new EventEmitter<any>();\r\n  @Output() edit = new EventEmitter<any>();\r\n  @Output() delete = new EventEmitter<any>();\r\n  @Output() custom = new EventEmitter<any>();\r\n  @Output() edited = new EventEmitter<any>();\r\n  @Output() userSelectRow = new EventEmitter<any>();\r\n  @Output() editRowSelect = new EventEmitter<any>();\r\n  @Output() multipleSelectRow = new EventEmitter<any>();\r\n  @Output() rowHover = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n  mode: string;\r\n  editInputClass: string;\r\n  isActionAdd: boolean;\r\n  isActionEdit: boolean;\r\n  isActionDelete: boolean;\r\n  noDataMessage: boolean;\r\n\r\n  get tableColumnsCount() {\r\n    const actionColumns = this.isActionAdd || this.isActionEdit || this.isActionDelete ? 1 : 0;\r\n    return this.grid.getColumns().length + actionColumns;\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.mode = this.grid.getSetting('mode');\r\n    this.editInputClass = this.grid.getSetting('edit.inputClass');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n    this.isActionAdd = this.grid.getSetting('actions.add');\r\n    this.isActionEdit = this.grid.getSetting('actions.edit');\r\n    this.isActionDelete = this.grid.getSetting('actions.delete');\r\n    this.noDataMessage = this.grid.getSetting('noDataMessage');\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { CellModule } from '../cell/cell.module';\r\n\r\nimport { Ng2SmartTableTbodyComponent } from './tbody.component';\r\nimport { TbodyCreateCancelComponent } from './cells/create-cancel.component';\r\nimport { TbodyEditDeleteComponent } from './cells/edit-delete.component';\r\nimport { TbodyCustomComponent } from './cells/custom.component';\r\n\r\nconst TBODY_COMPONENTS = [\r\n  TbodyCreateCancelComponent,\r\n  TbodyEditDeleteComponent,\r\n  TbodyCustomComponent,\r\n  Ng2SmartTableTbodyComponent\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    CellModule,\r\n  ],\r\n  declarations: [\r\n    ...TBODY_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...TBODY_COMPONENTS,\r\n  ],\r\n})\r\nexport class TBodyModule { }\r\n","import { Component, Input } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: '[ng2-st-checkbox-select-all]',\r\n  template: `\r\n    <input type=\"checkbox\" [ngModel]=\"isAllSelected\">\r\n  `,\r\n})\r\nexport class CheckboxSelectAllComponent {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n  @Input() isAllSelected: boolean;\r\n}\r\n","import {Component, Input, AfterViewInit, ElementRef, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n  selector: '[ng2-st-actions-title]',\r\n  template: `\r\n    <div class=\"ng2-smart-title\">{{ actionsColumnTitle }}</div>\r\n  `,\r\n})\r\nexport class ActionsTitleComponent implements AfterViewInit, OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n\r\n  actionsColumnTitle: string;\r\n\r\n  constructor(private ref: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.ref.nativeElement.classList.add('ng2-smart-actions');\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.actionsColumnTitle = this.grid.getSetting('actions.columnTitle');\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\n\r\nimport { DataSource } from '../../../../lib/data-source/data-source';\r\nimport { Column } from '../../../../lib/data-set/column';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table-title',\r\n  styleUrls: ['./title.component.scss'],\r\n  template: `\r\n    <a href=\"#\" *ngIf=\"column.isSortable\"\r\n                (click)=\"_sort($event)\"\r\n                class=\"ng2-smart-sort-link sort\"\r\n                [ngClass]=\"currentDirection\">\r\n      {{ column.title }}\r\n    </a>\r\n    <span class=\"ng2-smart-sort\" *ngIf=\"!column.isSortable\">{{ column.title }}</span>\r\n  `,\r\n})\r\nexport class TitleComponent implements OnChanges {\r\n\r\n  currentDirection = '';\r\n  @Input() column: Column;\r\n  @Input() source: DataSource;\r\n  @Output() sort = new EventEmitter<any>();\r\n\r\n  protected dataChangedSub: Subscription;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (changes.source) {\r\n      if (!changes.source.firstChange) {\r\n        this.dataChangedSub.unsubscribe();\r\n      }\r\n      this.dataChangedSub = this.source.onChanged().subscribe((dataChanges) => {\r\n        const sortConf = this.source.getSort();\r\n\r\n        if (sortConf.length > 0 && sortConf[0]['field'] === this.column.id) {\r\n          this.currentDirection = sortConf[0]['direction'];\r\n        } else {\r\n          this.currentDirection = '';\r\n        }\r\n\r\n        sortConf.forEach((fieldConf: any) => {\r\n\r\n        });\r\n      });\r\n    }\r\n  }\r\n\r\n  _sort(event: any) {\r\n    event.preventDefault();\r\n    this.changeSortDirection();\r\n    this.source.setSort([\r\n      {\r\n        field: this.column.id,\r\n        direction: this.currentDirection,\r\n        compare: this.column.getCompareFunction(),\r\n      },\r\n    ]);\r\n    this.sort.emit(null);\r\n  }\r\n\r\n  changeSortDirection(): string {\r\n    if (this.currentDirection) {\r\n      const newDirection = this.currentDirection === 'asc' ? 'desc' : 'asc';\r\n      this.currentDirection = newDirection;\r\n    } else {\r\n      this.currentDirection = this.column.sortDirection;\r\n    }\r\n    return this.currentDirection;\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\n\r\nimport { Column } from '../../../lib/data-set/column';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-st-column-title',\r\n  template: `\r\n    <div class=\"ng2-smart-title\">\r\n      <ng2-smart-table-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-smart-table-title>\r\n    </div>\r\n  `,\r\n})\r\nexport class ColumnTitleComponent {\r\n\r\n  @Input() column: Column;\r\n  @Input() source: DataSource;\r\n\r\n  @Output() sort = new EventEmitter<any>();\r\n\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\nimport { Column } from \"../../../lib/data-set/column\";\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-titles-row]',\r\n  template: `\r\n    <th ng2-st-checkbox-select-all *ngIf=\"isMultiSelectVisible\"\r\n                                   [grid]=\"grid\"\r\n                                   [source]=\"source\"\r\n                                   [isAllSelected]=\"isAllSelected\"\r\n                                   (click)=\"selectAllRows.emit($event)\">\r\n    </th>\r\n    <th ng2-st-actions-title *ngIf=\"showActionColumnLeft\" [grid]=\"grid\"></th>\r\n    <th *ngFor=\"let column of grid.getColumns()\" class=\"ng2-smart-th {{ column.id }}\" [ngClass]=\"column.class\"\r\n      [style.width]=\"column.width\" >\r\n      <ng2-st-column-title [source]=\"source\" [column]=\"column\" (sort)=\"sort.emit($event)\"></ng2-st-column-title>\r\n    </th>\r\n    <th ng2-st-actions-title *ngIf=\"showActionColumnRight\" [grid]=\"grid\"></th>\r\n  `,\r\n})\r\nexport class TheadTitlesRowComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() isAllSelected: boolean;\r\n  @Input() source: DataSource;\r\n\r\n  @Output() sort = new EventEmitter<any>();\r\n  @Output() selectAllRows = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n\r\n\r\n  ngOnChanges() {\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n  }\r\n\r\n}\r\n","import { Component, Input, Output, EventEmitter, AfterViewInit, ElementRef, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\n\r\n@Component({\r\n  selector: '[ng2-st-add-button]',\r\n  template: `\r\n    <a *ngIf=\"isActionAdd\" href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-add\"\r\n        [innerHTML]=\"addNewButtonContent\" (click)=\"onAdd($event)\"></a>\r\n  `,\r\n})\r\nexport class AddButtonComponent implements AfterViewInit, OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n  @Output() create = new EventEmitter<any>();\r\n\r\n  isActionAdd: boolean;\r\n  addNewButtonContent: string;\r\n\r\n  constructor(private ref: ElementRef) {\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.ref.nativeElement.classList.add('ng2-smart-actions-title', 'ng2-smart-actions-title-add');\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.isActionAdd = this.grid.getSetting('actions.add');\r\n    this.addNewButtonContent = this.grid.getSetting('add.addButtonContent');\r\n  }\r\n\r\n  onAdd(event: any) {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    if (this.grid.getSetting('mode') === 'external') {\r\n      this.create.emit({\r\n        source: this.source,\r\n      });\r\n    } else {\r\n      this.grid.createFormShown = true;\r\n    }\r\n  }\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { DataSource } from '../../../lib/data-source/data-source';\r\nimport { Column } from \"../../../lib/data-set/column\";\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-filters-row]',\r\n  template: `\r\n    <th *ngIf=\"isMultiSelectVisible\"></th>\r\n    <th ng2-st-add-button *ngIf=\"showActionColumnLeft\"\r\n                          [grid]=\"grid\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n    <th *ngFor=\"let column of grid.getColumns()\" class=\"ng2-smart-th {{ column.id }}\">\r\n      <ng2-smart-table-filter [source]=\"source\"\r\n                              [column]=\"column\"\r\n                              [inputClass]=\"filterInputClass\"\r\n                              (filter)=\"filter.emit($event)\">\r\n      </ng2-smart-table-filter>\r\n    </th>\r\n    <th ng2-st-add-button *ngIf=\"showActionColumnRight\"\r\n                          [grid]=\"grid\"\r\n                          [source]=\"source\"\r\n                          (create)=\"create.emit($event)\">\r\n    </th>\r\n  `,\r\n})\r\nexport class TheadFitlersRowComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() source: DataSource;\r\n\r\n  @Output() create = new EventEmitter<any>();\r\n  @Output() filter = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n  filterInputClass: string;\r\n\r\n  ngOnChanges() {\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n    this.filterInputClass = this.grid.getSetting('filter.inputClass');\r\n  }\r\n}\r\n","import {Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\n\r\n@Component({\r\n  selector: 'ng2-st-actions',\r\n  template: `\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-create\"\r\n        [innerHTML]=\"createButtonContent\"\r\n        (click)=\"$event.preventDefault();create.emit($event)\"></a>\r\n    <a href=\"#\" class=\"ng2-smart-action ng2-smart-action-add-cancel\"\r\n        [innerHTML]=\"cancelButtonContent\"\r\n        (click)=\"$event.preventDefault();grid.createFormShown = false;\"></a>\r\n  `,\r\n})\r\nexport class ActionsComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Output() create = new EventEmitter<any>();\r\n\r\n  createButtonContent: string;\r\n  cancelButtonContent: string;\r\n\r\n  ngOnChanges() {\r\n    this.createButtonContent = this.grid.getSetting('add.createButtonContent');\r\n    this.cancelButtonContent = this.grid.getSetting('add.cancelButtonContent');\r\n  }\r\n}\r\n","import { Component, Input, Output, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from '../../../lib/grid';\r\nimport { Row } from '../../../lib/data-set/row';\r\n\r\n@Component({\r\n  selector: '[ng2-st-thead-form-row]',\r\n  template: `\r\n      <td *ngIf=\"\"></td>\r\n      <td  *ngIf=\"showActionColumnLeft\"  class=\"ng2-smart-actions\">\r\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\r\n      </td>\r\n      <td *ngFor=\"let cell of grid.getNewRow().getCells()\">\r\n        <ng2-smart-table-cell [cell]=\"cell\"\r\n                              [grid]=\"grid\"\r\n                              [isNew]=\"true\"\r\n                              [createConfirm]=\"createConfirm\"\r\n                              [inputClass]=\"addInputClass\"\r\n                              [isInEditing]=\"grid.getNewRow().isInEditing\"\r\n                              (edited)=\"onCreate($event)\">\r\n        </ng2-smart-table-cell>\r\n      </td>\r\n      <td  *ngIf=\"showActionColumnRight\"  class=\"ng2-smart-actions\">\r\n        <ng2-st-actions [grid]=\"grid\" (create)=\"onCreate($event)\"></ng2-st-actions>\r\n      </td>\r\n  `,\r\n})\r\nexport class TheadFormRowComponent implements OnChanges {\r\n\r\n  @Input() grid: Grid;\r\n  @Input() row: Row;\r\n  @Input() createConfirm: EventEmitter<any>;\r\n\r\n  @Output() create = new EventEmitter<any>();\r\n\r\n  isMultiSelectVisible: boolean;\r\n  showActionColumnLeft: boolean;\r\n  showActionColumnRight: boolean;\r\n  addInputClass: string;\r\n\r\n  onCreate(event: any) {\r\n    event.stopPropagation();\r\n\r\n    this.grid.create(this.grid.getNewRow(), this.createConfirm);\r\n  }\r\n\r\n  ngOnChanges(){\r\n    this.isMultiSelectVisible = this.grid.isMultiSelectVisible();\r\n    this.showActionColumnLeft = this.grid.showActionColumn('left');\r\n    this.showActionColumnRight = this.grid.showActionColumn('right');\r\n    this.addInputClass = this.grid.getSetting('add.inputClass');\r\n  }\r\n}\r\n","<tr ng2-st-thead-titles-row *ngIf=\"!isHideHeader\"\r\n                            class=\"ng2-smart-titles\"\r\n                            [grid]=\"grid\"\r\n                            [isAllSelected]=\"isAllSelected\"\r\n                            [source]=\"source\"\r\n                            (sort)=\"sort.emit($event)\"\r\n                            (selectAllRows)=\"selectAllRows.emit($event)\">\r\n</tr>\r\n\r\n<tr ng2-st-thead-filters-row *ngIf=\"!isHideSubHeader\"\r\n                              class=\"ng2-smart-filters\"\r\n                              [grid]=\"grid\"\r\n                              [source]=\"source\"\r\n                              (create)=\"create.emit($event)\"\r\n                              (filter)=\"filter.emit($event)\">\r\n</tr>\r\n\r\n<tr ng2-st-thead-form-row *ngIf=\"grid.createFormShown\"\r\n                          [grid]=\"grid\"\r\n                          [createConfirm]=\"createConfirm\">\r\n</tr>\r\n","import {Component, Input, Output, EventEmitter, OnChanges} from '@angular/core';\r\n\r\nimport { Grid } from '../../lib/grid';\r\nimport { DataSource } from '../../lib/data-source/data-source';\r\n\r\n@Component({\r\n    selector: '[ng2-st-thead]',\r\n    templateUrl: './thead.component.html',\r\n})\r\nexport class Ng2SmartTableTheadComponent implements OnChanges {\r\n\r\n    @Input() grid: Grid;\r\n    @Input() source: DataSource;\r\n    @Input() isAllSelected: boolean;\r\n    @Input() createConfirm: EventEmitter<any>;\r\n\r\n    @Output() sort = new EventEmitter<any>();\r\n    @Output() selectAllRows = new EventEmitter<any>();\r\n    @Output() create = new EventEmitter<any>();\r\n    @Output() filter = new EventEmitter<any>();\r\n\r\n    isHideHeader: boolean;\r\n    isHideSubHeader: boolean;\r\n\r\n  ngOnChanges() {\r\n      this.isHideHeader = this.grid.getSetting('hideHeader');\r\n      this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { FilterModule } from '../filter/filter.module';\r\nimport { CellModule } from '../cell/cell.module';\r\n\r\nimport { Ng2SmartTableTheadComponent } from './thead.component';\r\nimport { ActionsComponent } from './cells/actions.component';\r\nimport { ActionsTitleComponent } from './cells/actions-title.component';\r\nimport { AddButtonComponent } from './cells/add-button.component';\r\nimport { CheckboxSelectAllComponent } from './cells/checkbox-select-all.component';\r\nimport { ColumnTitleComponent } from './cells/column-title.component';\r\nimport { TitleComponent } from './cells/title/title.component';\r\nimport { TheadFitlersRowComponent } from './rows/thead-filters-row.component';\r\nimport { TheadFormRowComponent } from './rows/thead-form-row.component';\r\nimport { TheadTitlesRowComponent } from './rows/thead-titles-row.component';\r\n\r\nconst THEAD_COMPONENTS = [\r\n  ActionsComponent,\r\n  ActionsTitleComponent,\r\n  AddButtonComponent,\r\n  CheckboxSelectAllComponent,\r\n  ColumnTitleComponent,\r\n  TitleComponent,\r\n  TheadFitlersRowComponent,\r\n  TheadFormRowComponent,\r\n  TheadTitlesRowComponent,\r\n  Ng2SmartTableTheadComponent,\r\n];\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    FilterModule,\r\n    CellModule,\r\n  ],\r\n  declarations: [\r\n    ...THEAD_COMPONENTS,\r\n  ],\r\n  exports: [\r\n    ...THEAD_COMPONENTS,\r\n  ],\r\n})\r\nexport class THeadModule { }\r\n","import { cloneDeep } from 'lodash';\r\n\r\n/**\r\n * Extending object that entered in first argument.\r\n *\r\n * Returns extended object or false if have no target object or incorrect type.\r\n *\r\n * If you wish to clone source object (without modify it), just use empty new\r\n * object as first argument, like this:\r\n *   deepExtend({}, yourObj_1, [yourObj_N]);\r\n */\r\nexport const deepExtend = function(...objects: Array<any>): any {\r\n  if (arguments.length < 1 || typeof arguments[0] !== 'object') {\r\n    return false;\r\n  }\r\n\r\n  if (arguments.length < 2) {\r\n    return arguments[0];\r\n  }\r\n\r\n  const target = arguments[0];\r\n\r\n  // convert arguments to array and cut off target object\r\n  const args = Array.prototype.slice.call(arguments, 1);\r\n\r\n  let val, src;\r\n\r\n  args.forEach((obj: any) => {\r\n    // skip argument if it is array or isn't object\r\n    if (typeof obj !== 'object' || Array.isArray(obj)) {\r\n      return;\r\n    }\r\n\r\n    Object.keys(obj).forEach(function (key) {\r\n      src = target[key]; // source value\r\n      val = obj[key]; // new value\r\n\r\n      // recursion prevention\r\n      if (val === target) {\r\n        return;\r\n\r\n        /**\r\n         * if new value isn't object then just overwrite by new value\r\n         * instead of extending.\r\n         */\r\n      } else if (typeof val !== 'object' || val === null) {\r\n        target[key] = val;\r\n        return;\r\n\r\n        // just clone arrays (and recursive clone objects inside)\r\n      } else if (Array.isArray(val)) {\r\n        target[key] = cloneDeep(val);\r\n        return;\r\n\r\n        // overwrite by new value if source isn't object or array\r\n      } else if (typeof src !== 'object' || src === null || Array.isArray(src)) {\r\n        target[key] = deepExtend({}, val);\r\n        return;\r\n\r\n        // source value and new value is objects both, extending...\r\n      } else {\r\n        target[key] = deepExtend(src, val);\r\n        return;\r\n      }\r\n    });\r\n  });\r\n\r\n  return target;\r\n};\r\n\r\nexport class Deferred {\r\n\r\n  promise: Promise<any>;\r\n\r\n  resolve: any;\r\n  reject: any;\r\n\r\n  constructor() {\r\n    this.promise = new Promise((resolve, reject) => {\r\n      this.resolve = resolve;\r\n      this.reject = reject;\r\n    });\r\n  }\r\n}\r\n\r\n// getDeepFromObject({result: {data: 1}}, 'result.data', 2); // returns 1\r\nexport function getDeepFromObject(object = {}, name: string, defaultValue?: any) {\r\n  const keys = name.split('.');\r\n  // clone the object\r\n  let level = deepExtend({}, object);\r\n  keys.forEach((k) => {\r\n    if (level && typeof level[k] !== 'undefined') {\r\n      level = level[k];\r\n    }\r\n  });\r\n\r\n  return typeof level === 'undefined' ? defaultValue : level;\r\n}\r\n","import { Column } from './column';\r\nimport { DataSet } from './data-set';\r\nimport { Row } from './row';\r\n\r\nexport function prepareValue (value: any) { return value }\r\n\r\nexport class Cell {\r\n\r\n  newValue: any = '';\r\n  protected static PREPARE = prepareValue;\r\n\r\n  constructor(protected value: any, protected row: Row, protected column: any, protected dataSet: DataSet) {\r\n    this.newValue = value;\r\n  }\r\n\r\n  getColumn(): Column {\r\n    return this.column;\r\n  }\r\n\r\n  getRow(): Row {\r\n    return this.row;\r\n  }\r\n\r\n  getValue(): any {\r\n    const valid = this.column.getValuePrepareFunction() instanceof Function;\r\n    const prepare = valid ? this.column.getValuePrepareFunction() : Cell.PREPARE;\r\n    return prepare.call(null, this.value, this.row.getData(), this);\r\n  }\r\n\r\n  setValue(value: any): any {\r\n    this.newValue = value;\r\n  }\r\n\r\n  getId(): string {\r\n    return this.getColumn().id;\r\n  }\r\n\r\n  getTitle(): string {\r\n    return this.getColumn().title;\r\n  }\r\n\r\n  isEditable(): boolean {\r\n    if (this.getRow().index === -1) {\r\n      return this.getColumn().isAddable;\r\n    }\r\n    else {\r\n      return this.getColumn().isEditable;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Cell } from './cell';\r\nimport { Column } from './column';\r\nimport { DataSet } from './data-set';\r\n\r\nexport class Row {\r\n\r\n  isSelected: boolean = false;\r\n  isInEditing: boolean = false;\r\n  cells: Array<Cell> = [];\r\n\r\n\r\n  constructor(public index: number, protected data: any, protected _dataSet: DataSet) {\r\n    this.process();\r\n  }\r\n\r\n  getCell(column: Column): Cell {\r\n    return this.cells.find(el => el.getColumn() === column);\r\n  }\r\n\r\n  getCells() {\r\n    return this.cells;\r\n  }\r\n\r\n  getData(): any {\r\n    return this.data;\r\n  }\r\n\r\n  getIsSelected(): boolean {\r\n    return this.isSelected;\r\n  }\r\n\r\n  getNewData(): any {\r\n    const values = Object.assign({}, this.data);\r\n    this.getCells().forEach((cell) => values[cell.getColumn().id] = cell.newValue);\r\n    return values;\r\n  }\r\n\r\n  setData(data: any): any {\r\n    this.data = data;\r\n    this.process();\r\n  }\r\n\r\n  process() {\r\n    this.cells = [];\r\n    this._dataSet.getColumns().forEach((column: Column) => {\r\n      const cell = this.createCell(column);\r\n      this.cells.push(cell);\r\n    });\r\n  }\r\n\r\n  createCell(column: Column): Cell {\r\n    const defValue = (column as any).settings.defaultValue ? (column as any).settings.defaultValue : '';\r\n    const value = typeof this.data[column.id] === 'undefined' ? defValue : this.data[column.id];\r\n    return new Cell(value, this, column, this._dataSet);\r\n  }\r\n}\r\n","import { DataSet } from './data-set';\r\n\r\nexport class Column {\r\n\r\n  title: string = '';\r\n  type: string = '';\r\n  class: string = '';\r\n  width: string = '';\r\n  isSortable: boolean = false;\r\n  isEditable: boolean = true;\r\n  isAddable: boolean = true;\r\n  isFilterable: boolean = false;\r\n  sortDirection: string = '';\r\n  defaultSortDirection: string = '';\r\n  editor: { type: string, config: any, component: any } = { type: '', config: {}, component: null };\r\n  filter: { type: string, config: any, component: any } = { type: '', config: {}, component: null };\r\n  renderComponent: any = null;\r\n  compareFunction: Function;\r\n  valuePrepareFunction: Function;\r\n  filterFunction: Function;\r\n  onComponentInitFunction: Function;\r\n\r\n  constructor(public id: string, protected settings: any, protected dataSet: DataSet) {\r\n    this.process();\r\n  }\r\n\r\n  getOnComponentInitFunction(): Function {\r\n    return this.onComponentInitFunction;\r\n  }\r\n\r\n  getCompareFunction(): Function {\r\n    return this.compareFunction;\r\n  }\r\n\r\n  getValuePrepareFunction(): Function {\r\n    return this.valuePrepareFunction;\r\n  }\r\n\r\n  getFilterFunction(): Function {\r\n    return this.filterFunction;\r\n  }\r\n\r\n  getConfig(): any {\r\n    return this.editor && this.editor.config;\r\n  }\r\n\r\n  getFilterType(): any {\r\n    return this.filter && this.filter.type;\r\n  }\r\n\r\n  getFilterConfig(): any {\r\n    return this.filter && this.filter.config;\r\n  }\r\n\r\n  protected process() {\r\n    this.title = this.settings['title'];\r\n    this.class = this.settings['class'];\r\n    this.width = this.settings['width'];\r\n    this.type = this.prepareType();\r\n    this.editor = this.settings['editor'];\r\n    this.filter = this.settings['filter'];\r\n    this.renderComponent = this.settings['renderComponent'];\r\n\r\n    this.isFilterable = typeof this.settings['filter'] === 'undefined' ? true : !!this.settings['filter'];\r\n    this.defaultSortDirection = ['asc', 'desc']\r\n      .indexOf(this.settings['sortDirection']) !== -1 ? this.settings['sortDirection'] : '';\r\n    this.isSortable = typeof this.settings['sort'] === 'undefined' ? true : !!this.settings['sort'];\r\n    this.isEditable = typeof this.settings['editable'] === 'undefined' ? true : !!this.settings['editable'];\r\n    this.isAddable=typeof this.settings['addable'] === 'undefined' ? true : !!this.settings['addable'];\r\n    this.sortDirection = this.prepareSortDirection();\r\n\r\n    this.compareFunction = this.settings['compareFunction'];\r\n    this.valuePrepareFunction = this.settings['valuePrepareFunction'];\r\n    this.filterFunction = this.settings['filterFunction'];\r\n    this.onComponentInitFunction = this.settings['onComponentInitFunction'];\r\n  }\r\n\r\n  prepareType(): string {\r\n    return this.settings['type'] || this.determineType();\r\n  }\r\n\r\n  prepareSortDirection(): string {\r\n    return this.settings['sort'] === 'desc' ? 'desc' : 'asc';\r\n  }\r\n\r\n  determineType(): string {\r\n    // TODO: determine type by data\r\n    return 'text';\r\n  }\r\n}\r\n","import { Row } from './row';\r\nimport { Column } from './column';\r\n\r\nexport class DataSet {\r\n\r\n  newRow: Row;\r\n\r\n  protected data: Array<any> = [];\r\n  protected columns: Array<Column> = [];\r\n  protected rows: Array<Row> = [];\r\n  protected selectedRow: Row;\r\n  protected willSelect: string = 'first';\r\n\r\n  constructor(data: Array<any> = [], protected columnSettings: Object) {\r\n    this.createColumns(columnSettings);\r\n    this.setData(data);\r\n\r\n    this.createNewRow();\r\n  }\r\n\r\n  setData(data: Array<any>) {\r\n    this.data = data;\r\n    this.createRows();\r\n  }\r\n\r\n  getColumns(): Array<Column> {\r\n    return this.columns;\r\n  }\r\n\r\n  getRows(): Array<Row> {\r\n    return this.rows;\r\n  }\r\n\r\n  getFirstRow(): Row {\r\n    return this.rows[0];\r\n  }\r\n\r\n  getLastRow(): Row {\r\n    return this.rows[this.rows.length - 1];\r\n  }\r\n\r\n  findRowByData(data: any): Row {\r\n    return this.rows.find((row: Row) => row.getData() === data);\r\n  }\r\n\r\n  deselectAll() {\r\n    this.rows.forEach((row) => {\r\n      row.isSelected = false;\r\n    });\r\n  }\r\n\r\n  selectRow(row: Row): Row {\r\n    const previousIsSelected = row.isSelected;\r\n    this.deselectAll();\r\n\r\n    row.isSelected = !previousIsSelected;\r\n    this.selectedRow = row;\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  multipleSelectRow(row: Row): Row {\r\n    row.isSelected = !row.isSelected;\r\n    this.selectedRow = row;\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  selectPreviousRow(): Row {\r\n    if (this.rows.length > 0) {\r\n      let index = this.selectedRow ? this.selectedRow.index : 0;\r\n      if (index > this.rows.length - 1) {\r\n        index = this.rows.length - 1;\r\n      }\r\n      this.selectRow(this.rows[index]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  selectFirstRow(): Row {\r\n    if (this.rows.length > 0) {\r\n      this.selectRow(this.rows[0]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  selectLastRow(): Row {\r\n    if (this.rows.length > 0) {\r\n      this.selectRow(this.rows[this.rows.length - 1]);\r\n      return this.selectedRow;\r\n    }\r\n  }\r\n\r\n  willSelectFirstRow() {\r\n    this.willSelect = 'first';\r\n  }\r\n\r\n  willSelectLastRow() {\r\n    this.willSelect = 'last';\r\n  }\r\n\r\n  select(): Row {\r\n    if (this.getRows().length === 0) {\r\n      return;\r\n    }\r\n    if (this.willSelect) {\r\n      if (this.willSelect === 'first') {\r\n        this.selectFirstRow();\r\n      }\r\n      if (this.willSelect === 'last') {\r\n        this.selectLastRow();\r\n      }\r\n      this.willSelect = '';\r\n    } else {\r\n      this.selectFirstRow();\r\n    }\r\n\r\n    return this.selectedRow;\r\n  }\r\n\r\n  createNewRow() {\r\n    this.newRow = new Row(-1, {}, this);\r\n    this.newRow.isInEditing = true;\r\n  }\r\n\r\n  /**\r\n   * Create columns by mapping from the settings\r\n   * @param settings\r\n   * @private\r\n   */\r\n  createColumns(settings: any) {\r\n    for (const id in settings) {\r\n      if (settings.hasOwnProperty(id)) {\r\n        this.columns.push(new Column(id, settings[id], this));\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Create rows based on current data prepared in data source\r\n   * @private\r\n   */\r\n  createRows() {\r\n    this.rows = [];\r\n    this.data.forEach((el, index) => {\r\n      this.rows.push(new Row(index, el, this));\r\n    });\r\n  }\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\nimport { EventEmitter } from '@angular/core';\r\n\r\nimport { Deferred, getDeepFromObject } from './helpers';\r\nimport { Column } from './data-set/column';\r\nimport { Row } from './data-set/row';\r\nimport { DataSet } from './data-set/data-set';\r\nimport { DataSource } from './data-source/data-source';\r\n\r\nexport class Grid {\r\n\r\n  createFormShown: boolean = false;\r\n\r\n  source: DataSource;\r\n  settings: any;\r\n  dataSet: DataSet;\r\n\r\n  onSelectRowSource = new Subject<any>();\r\n\r\n  constructor(source: DataSource, settings: any) {\r\n    this.setSettings(settings);\r\n    this.setSource(source);\r\n  }\r\n\r\n  showActionColumn(position: string): boolean {\r\n    return this.isCurrentActionsPosition(position) && this.isActionsVisible();\r\n  }\r\n\r\n  isCurrentActionsPosition(position: string): boolean {\r\n    return position == this.getSetting('actions.position');\r\n  }\r\n\r\n  isActionsVisible(): boolean {\r\n    return this.getSetting('actions.add') || this.getSetting('actions.edit') || this.getSetting('actions.delete') || this.getSetting('actions.custom').length;\r\n  }\r\n\r\n  isMultiSelectVisible(): boolean {\r\n    return this.getSetting('selectMode') === 'multi';\r\n  }\r\n\r\n  getNewRow(): Row {\r\n    return this.dataSet.newRow;\r\n  }\r\n\r\n  setSettings(settings: Object) {\r\n    this.settings = settings;\r\n    this.dataSet = new DataSet([], this.getSetting('columns'));\r\n\r\n    if (this.source) {\r\n      this.source.refresh();\r\n    }\r\n  }\r\n\r\n  getDataSet(): DataSet {\r\n    return this.dataSet;\r\n  }\r\n\r\n  setSource(source: DataSource) {\r\n    this.source = this.prepareSource(source);\r\n\r\n    this.source.onChanged().subscribe((changes: any) => this.processDataChange(changes));\r\n\r\n    this.source.onUpdated().subscribe((data: any) => {\r\n      const changedRow = this.dataSet.findRowByData(data);\r\n      changedRow.setData(data);\r\n    });\r\n  }\r\n\r\n  getSetting(name: string, defaultValue?: any): any {\r\n    return getDeepFromObject(this.settings, name, defaultValue);\r\n  }\r\n\r\n  getColumns(): Array<Column> {\r\n    return this.dataSet.getColumns();\r\n  }\r\n\r\n  getRows(): Array<Row> {\r\n    return this.dataSet.getRows();\r\n  }\r\n\r\n  selectRow(row: Row) {\r\n    this.dataSet.selectRow(row);\r\n  }\r\n\r\n  multipleSelectRow(row: Row) {\r\n    this.dataSet.multipleSelectRow(row);\r\n  }\r\n\r\n  onSelectRow(): Observable<any> {\r\n    return this.onSelectRowSource.asObservable();\r\n  }\r\n\r\n  edit(row: Row) {\r\n    row.isInEditing = true;\r\n  }\r\n\r\n  create(row: Row, confirmEmitter: EventEmitter<any>) {\r\n\r\n    const deferred = new Deferred();\r\n    deferred.promise.then((newData) => {\r\n      newData = newData ? newData : row.getNewData();\r\n      if (deferred.resolve.skipAdd) {\r\n        this.createFormShown = false;\r\n      } else {\r\n        this.source.prepend(newData).then(() => {\r\n          this.createFormShown = false;\r\n          this.dataSet.createNewRow();\r\n        });\r\n      }\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('add.confirmCreate')) {\r\n      confirmEmitter.emit({\r\n        newData: row.getNewData(),\r\n        source: this.source,\r\n        confirm: deferred,\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  save(row: Row, confirmEmitter: EventEmitter<any>) {\r\n\r\n    const deferred = new Deferred();\r\n    deferred.promise.then((newData) => {\r\n      newData = newData ? newData : row.getNewData();\r\n      if (deferred.resolve.skipEdit) {\r\n        row.isInEditing = false;\r\n      } else {\r\n        this.source.update(row.getData(), newData).then(() => {\r\n          row.isInEditing = false;\r\n        });\r\n      }\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('edit.confirmSave')) {\r\n      confirmEmitter.emit({\r\n        data: row.getData(),\r\n        newData: row.getNewData(),\r\n        source: this.source,\r\n        confirm: deferred,\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  delete(row: Row, confirmEmitter: EventEmitter<any>) {\r\n\r\n    const deferred = new Deferred();\r\n    deferred.promise.then(() => {\r\n      this.source.remove(row.getData());\r\n    }).catch((err) => {\r\n      // doing nothing\r\n    });\r\n\r\n    if (this.getSetting('delete.confirmDelete')) {\r\n      confirmEmitter.emit({\r\n        data: row.getData(),\r\n        source: this.source,\r\n        confirm: deferred,\r\n      });\r\n    } else {\r\n      deferred.resolve();\r\n    }\r\n  }\r\n\r\n  processDataChange(changes: any) {\r\n    if (this.shouldProcessChange(changes)) {\r\n      this.dataSet.setData(changes['elements']);\r\n      if (this.getSetting('selectMode') !== 'multi') {\r\n        const row = this.determineRowToSelect(changes);\r\n\r\n        if (row) {\r\n          this.onSelectRowSource.next(row);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  shouldProcessChange(changes: any): boolean {\r\n    if (['filter', 'sort', 'page', 'remove', 'refresh', 'load', 'paging'].indexOf(changes['action']) !== -1) {\r\n      return true;\r\n    } else if (['prepend', 'append'].indexOf(changes['action']) !== -1 && !this.getSetting('pager.display')) {\r\n      return true;\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  // TODO: move to selectable? Separate directive\r\n  determineRowToSelect(changes: any): Row {\r\n\r\n    if (['load', 'page', 'filter', 'sort', 'refresh'].indexOf(changes['action']) !== -1) {\r\n      return this.dataSet.select();\r\n    }\r\n    if (changes['action'] === 'remove') {\r\n      if (changes['elements'].length === 0) {\r\n        // we have to store which one to select as the data will be reloaded\r\n        this.dataSet.willSelectLastRow();\r\n      } else {\r\n        return this.dataSet.selectPreviousRow();\r\n      }\r\n    }\r\n    if (changes['action'] === 'append') {\r\n      // we have to store which one to select as the data will be reloaded\r\n      this.dataSet.willSelectLastRow();\r\n    }\r\n    if (changes['action'] === 'add') {\r\n      return this.dataSet.selectFirstRow();\r\n    }\r\n    if (changes['action'] === 'update') {\r\n      return this.dataSet.selectFirstRow();\r\n    }\r\n    if (changes['action'] === 'prepend') {\r\n      // we have to store which one to select as the data will be reloaded\r\n      this.dataSet.willSelectFirstRow();\r\n    }\r\n    return null;\r\n  }\r\n\r\n  prepareSource(source: any): DataSource {\r\n    const initialSource: any = this.getInitialSort();\r\n    if (initialSource && initialSource['field'] && initialSource['direction']) {\r\n      source.setSort([initialSource], false);\r\n    }\r\n    if (this.getSetting('pager.display') === true) {\r\n      source.setPaging(1, this.getSetting('pager.perPage'), false);\r\n    }\r\n\r\n    source.refresh();\r\n    return source;\r\n  }\r\n\r\n  getInitialSort() {\r\n    const sortConf: any = {};\r\n    this.getColumns().forEach((column: Column) => {\r\n      if (column.isSortable && column.defaultSortDirection) {\r\n        sortConf['field'] = column.id;\r\n        sortConf['direction'] = column.defaultSortDirection;\r\n        sortConf['compare'] = column.getCompareFunction();\r\n      }\r\n    });\r\n    return sortConf;\r\n  }\r\n\r\n  getSelectedRows(): Array<any> {\r\n    return this.dataSet.getRows()\r\n      .filter(r => r.isSelected);\r\n  }\r\n\r\n  selectAllRows(status: any) {\r\n    this.dataSet.getRows()\r\n      .forEach(r => r.isSelected = status);\r\n  }\r\n\r\n  getFirstRow(): Row {\r\n    return this.dataSet.getFirstRow();\r\n  }\r\n\r\n  getLastRow(): Row {\r\n    return this.dataSet.getLastRow();\r\n  }\r\n\r\n}\r\n","import { Subject } from 'rxjs';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport abstract class DataSource {\r\n\r\n  protected onChangedSource = new Subject<any>();\r\n  protected onAddedSource = new Subject<any>();\r\n  protected onUpdatedSource = new Subject<any>();\r\n  protected onRemovedSource = new Subject<any>();\r\n\r\n  abstract getAll(): Promise<any>;\r\n  abstract getElements(): Promise<any>;\r\n  abstract getSort(): any;\r\n  abstract getFilter(): any;\r\n  abstract getPaging(): any;\r\n  abstract count(): number;\r\n\r\n  refresh() {\r\n    this.emitOnChanged('refresh');\r\n  }\r\n\r\n  load(data: Array<any>): Promise<any> {\r\n    this.emitOnChanged('load');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  onChanged(): Observable<any> {\r\n    return this.onChangedSource.asObservable();\r\n  }\r\n\r\n  onAdded(): Observable<any> {\r\n    return this.onAddedSource.asObservable();\r\n  }\r\n\r\n  onUpdated(): Observable<any> {\r\n    return this.onUpdatedSource.asObservable();\r\n  }\r\n\r\n  onRemoved(): Observable<any> {\r\n    return this.onRemovedSource.asObservable();\r\n  }\r\n\r\n  prepend(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('prepend');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  append(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('append');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  add(element: any): Promise<any> {\r\n    this.emitOnAdded(element);\r\n    this.emitOnChanged('add');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  remove(element: any): Promise<any> {\r\n    this.emitOnRemoved(element);\r\n    this.emitOnChanged('remove');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  update(element: any, values: any): Promise<any> {\r\n    this.emitOnUpdated(element);\r\n    this.emitOnChanged('update');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  empty(): Promise<any> {\r\n    this.emitOnChanged('empty');\r\n    return Promise.resolve();\r\n  }\r\n\r\n  setSort(conf: Array<any>, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('sort');\r\n    }\r\n  }\r\n\r\n  setFilter(conf: Array<any>, andOperator?: boolean, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('filter');\r\n    }\r\n  }\r\n\r\n  addFilter(fieldConf: {}, andOperator?: boolean, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('filter');\r\n    }\r\n  }\r\n\r\n  setPaging(page: number, perPage: number, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('paging');\r\n    }\r\n  }\r\n\r\n  setPage(page: number, doEmit?: boolean) {\r\n    if (doEmit) {\r\n      this.emitOnChanged('page');\r\n    }\r\n  }\r\n\r\n  protected emitOnRemoved(element: any) {\r\n    this.onRemovedSource.next(element);\r\n  }\r\n\r\n  protected emitOnUpdated(element: any) {\r\n    this.onUpdatedSource.next(element);\r\n  }\r\n\r\n  protected emitOnAdded(element: any) {\r\n    this.onAddedSource.next(element);\r\n  }\r\n\r\n  protected emitOnChanged(action: string) {\r\n    this.getElements().then((elements) => this.onChangedSource.next({\r\n      action: action,\r\n      elements: elements,\r\n      paging: this.getPaging(),\r\n      filter: this.getFilter(),\r\n      sort: this.getSort(),\r\n    }));\r\n  }\r\n}\r\n","export function compareValues(direction: any, a: any, b: any) {\r\n  if (a < b) {\r\n    return -1 * direction;\r\n  }\r\n  if (a > b) {\r\n    return direction;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport class LocalSorter {\r\n\r\n  static sort(data: Array<any>, field: string, direction: string, customCompare?: Function): Array<any> {\r\n\r\n    const dir: number = (direction === 'asc') ? 1 : -1;\r\n    const compare: Function = customCompare ? customCompare : compareValues;\r\n\r\n    return data.sort((a, b) => {\r\n      return compare.call(null, dir, a[field], b[field]);\r\n    });\r\n  }\r\n}\r\n","export function filterValues(value: string, search: string) {\r\n  return value.toString().toLowerCase().includes(search.toString().toLowerCase());\r\n}\r\n\r\nexport class LocalFilter {\r\n\r\n  static filter(data: Array<any>, field: string, search: string, customFilter?: Function): Array<any> {\r\n    const filter: Function = customFilter ? customFilter : filterValues;\r\n\r\n    return data.filter((el) => {\r\n      const value = typeof el[field] === 'undefined' || el[field] === null ? '' : el[field];\r\n      return filter.call(null, value, search);\r\n    });\r\n  }\r\n}\r\n","export class LocalPager {\r\n\r\n  static paginate(data: Array<any>, page: number, perPage: number): Array<any> {\r\n    return data.slice(perPage * (page - 1), perPage * page);\r\n  }\r\n}\r\n","import { LocalSorter } from './local.sorter';\r\nimport { LocalFilter } from './local.filter';\r\nimport { LocalPager } from './local.pager';\r\nimport { DataSource } from '../data-source';\r\nimport { deepExtend } from '../../helpers';\r\n\r\nexport class LocalDataSource extends DataSource {\r\n\r\n  protected data: Array<any> = [];\r\n  protected filteredAndSorted: Array<any> = [];\r\n  protected sortConf: Array<any> = [];\r\n  protected filterConf: any = {\r\n    filters: [],\r\n    andOperator: true,\r\n  };\r\n  protected pagingConf: any = {};\r\n\r\n  constructor(data: Array<any> = []) {\r\n    super();\r\n\r\n    this.data = data;\r\n  }\r\n\r\n  load(data: Array<any>): Promise<any> {\r\n    this.data = data;\r\n\r\n    return super.load(data);\r\n  }\r\n\r\n  prepend(element: any): Promise<any> {\r\n    this.reset(true);\r\n\r\n    this.data.unshift(element);\r\n    return super.prepend(element);\r\n  }\r\n\r\n  append(element: any): Promise<any> {\r\n    this.reset(true);\r\n\r\n    this.data.push(element);\r\n    return super.append(element);\r\n  }\r\n\r\n  add(element: any): Promise<any> {\r\n    this.data.push(element);\r\n\r\n    return super.add(element);\r\n  }\r\n\r\n  remove(element: any): Promise<any> {\r\n    this.data = this.data.filter(el => el !== element);\r\n\r\n    return super.remove(element);\r\n  }\r\n\r\n  update(element: any, values: any): Promise<any> {\r\n    return new Promise((resolve, reject) => {\r\n      this.find(element).then((found) => {\r\n        found = deepExtend(found, values);\r\n        super.update(found, values).then(resolve).catch(reject);\r\n      }).catch(reject);\r\n    });\r\n  }\r\n\r\n  find(element: any): Promise<any> {\r\n    const found = this.data.find(el => el === element);\r\n    if (found) {\r\n      return Promise.resolve(found);\r\n    }\r\n\r\n    return Promise.reject(new Error('Element was not found in the dataset'));\r\n  }\r\n\r\n  getElements(): Promise<any> {\r\n    const data = this.data.slice(0);\r\n    return Promise.resolve(this.prepareData(data));\r\n  }\r\n\r\n  getFilteredAndSorted(): Promise<any> {\r\n    let data = this.data.slice(0);\r\n    this.prepareData(data);\r\n    return Promise.resolve(this.filteredAndSorted);\r\n  }\r\n\r\n  getAll(): Promise<any> {\r\n    const data = this.data.slice(0);\r\n    return Promise.resolve(data);\r\n  }\r\n\r\n  reset(silent = false) {\r\n    if (silent) {\r\n      this.filterConf = {\r\n        filters: [],\r\n        andOperator: true,\r\n      };\r\n      this.sortConf = [];\r\n      this.pagingConf['page'] = 1;\r\n    } else {\r\n      this.setFilter([], true, false);\r\n      this.setSort([], false);\r\n      this.setPage(1);\r\n    }\r\n  }\r\n\r\n  empty(): Promise<any> {\r\n    this.data = [];\r\n\r\n    return super.empty();\r\n  }\r\n\r\n  count(): number {\r\n    return this.filteredAndSorted.length;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Array of conf objects\r\n   * [\r\n   *  {field: string, direction: asc|desc|null, compare: Function|null},\r\n   * ]\r\n   * @param conf\r\n   * @param doEmit\r\n   * @returns {LocalDataSource}\r\n   */\r\n  setSort(conf: Array<any>, doEmit = true): LocalDataSource {\r\n    if (conf !== null) {\r\n\r\n      conf.forEach((fieldConf) => {\r\n        if (!fieldConf['field'] || typeof fieldConf['direction'] === 'undefined') {\r\n          throw new Error('Sort configuration object is not valid');\r\n        }\r\n      });\r\n      this.sortConf = conf;\r\n    }\r\n\r\n    super.setSort(conf, doEmit);\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * Array of conf objects\r\n   * [\r\n   *  {field: string, search: string, filter: Function|null},\r\n   * ]\r\n   * @param conf\r\n   * @param andOperator\r\n   * @param doEmit\r\n   * @returns {LocalDataSource}\r\n   */\r\n  setFilter(conf: Array<any>, andOperator = true, doEmit = true): LocalDataSource {\r\n    if (conf && conf.length > 0) {\r\n      conf.forEach((fieldConf) => {\r\n        this.addFilter(fieldConf, andOperator, false);\r\n      });\r\n    } else {\r\n      this.filterConf = {\r\n        filters: [],\r\n        andOperator: true,\r\n      };\r\n    }\r\n    this.filterConf.andOperator = andOperator;\r\n    this.pagingConf['page'] = 1;\r\n\r\n    super.setFilter(conf, andOperator, doEmit);\r\n    return this;\r\n  }\r\n\r\n  addFilter(fieldConf: any, andOperator = true, doEmit: boolean = true): LocalDataSource {\r\n    if (!fieldConf['field'] || typeof fieldConf['search'] === 'undefined') {\r\n      throw new Error('Filter configuration object is not valid');\r\n    }\r\n\r\n    let found = false;\r\n    this.filterConf.filters.forEach((currentFieldConf: any, index: any) => {\r\n      if (currentFieldConf['field'] === fieldConf['field']) {\r\n        this.filterConf.filters[index] = fieldConf;\r\n        found = true;\r\n      }\r\n    });\r\n    if (!found) {\r\n      this.filterConf.filters.push(fieldConf);\r\n    }\r\n    this.filterConf.andOperator = andOperator;\r\n    super.addFilter(fieldConf, andOperator, doEmit);\r\n    return this;\r\n  }\r\n\r\n  setPaging(page: number, perPage: number, doEmit: boolean = true): LocalDataSource {\r\n    this.pagingConf['page'] = page;\r\n    this.pagingConf['perPage'] = perPage;\r\n\r\n    super.setPaging(page, perPage, doEmit);\r\n    return this;\r\n  }\r\n\r\n  setPage(page: number, doEmit: boolean = true): LocalDataSource {\r\n    this.pagingConf['page'] = page;\r\n    super.setPage(page, doEmit);\r\n    return this;\r\n  }\r\n\r\n  getSort(): any {\r\n    return this.sortConf;\r\n  }\r\n\r\n  getFilter(): any {\r\n    return this.filterConf;\r\n  }\r\n\r\n  getPaging(): any {\r\n    return this.pagingConf;\r\n  }\r\n\r\n  protected prepareData(data: Array<any>): Array<any> {\r\n    data = this.filter(data);\r\n    data = this.sort(data);\r\n    this.filteredAndSorted = data.slice(0);\r\n\r\n    return this.paginate(data);\r\n  }\r\n\r\n  protected sort(data: Array<any>): Array<any> {\r\n    if (this.sortConf) {\r\n      this.sortConf.forEach((fieldConf) => {\r\n        data = LocalSorter\r\n          .sort(data, fieldConf['field'], fieldConf['direction'], fieldConf['compare']);\r\n      });\r\n    }\r\n    return data;\r\n  }\r\n\r\n  // TODO: refactor?\r\n  protected filter(data: Array<any>): Array<any> {\r\n    if (this.filterConf.filters) {\r\n      if (this.filterConf.andOperator) {\r\n        this.filterConf.filters.forEach((fieldConf: any) => {\r\n          if (fieldConf['search'].length > 0) {\r\n            data = LocalFilter\r\n              .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']);\r\n          }\r\n        });\r\n      } else {\r\n        let mergedData: any = [];\r\n        this.filterConf.filters.forEach((fieldConf: any) => {\r\n          if (fieldConf['search'].length > 0) {\r\n            mergedData = mergedData.concat(LocalFilter\r\n              .filter(data, fieldConf['field'], fieldConf['search'], fieldConf['filter']));\r\n          }\r\n        });\r\n        // remove non unique items\r\n        data = mergedData.filter((elem: any, pos: any, arr: any) => {\r\n          return arr.indexOf(elem) === pos;\r\n        });\r\n      }\r\n    }\r\n    return data;\r\n  }\r\n\r\n  protected paginate(data: Array<any>): Array<any> {\r\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n      data = LocalPager.paginate(data, this.pagingConf['page'], this.pagingConf['perPage']);\r\n    }\r\n    return data;\r\n  }\r\n}\r\n","<table [id]=\"tableId\" [ngClass]=\"tableClass\">\r\n\r\n  <thead ng2-st-thead *ngIf=\"!isHideHeader || !isHideSubHeader\"\r\n                      [grid]=\"grid\"\r\n                      [isAllSelected]=\"isAllSelected\"\r\n                      [source]=\"source\"\r\n                      [createConfirm]=\"createConfirm\"\r\n                      (create)=\"create.emit($event)\"\r\n                      (selectAllRows)=\"onSelectAllRows($event)\"\r\n                      (sort)=\"sort($event)\"\r\n                      (filter)=\"filter($event)\">\r\n  </thead>\r\n\r\n  <tbody ng2-st-tbody [grid]=\"grid\"\r\n                      [source]=\"source\"\r\n                      [deleteConfirm]=\"deleteConfirm\"\r\n                      [editConfirm]=\"editConfirm\"\r\n                      [rowClassFunction]=\"rowClassFunction\"\r\n                      (edit)=\"edit.emit($event)\"\r\n                      (delete)=\"delete.emit($event)\"\r\n                      (custom)=\"custom.emit($event)\"\r\n                      (userSelectRow)=\"onUserSelectRow($event)\"\r\n                      (editRowSelect)=\"editRowSelect($event)\"\r\n                      (multipleSelectRow)=\"multipleSelectRow($event)\"\r\n                      (rowHover)=\"onRowHover($event)\">\r\n  </tbody>\r\n\r\n</table>\r\n\r\n<ng2-smart-table-pager *ngIf=\"isPagerDisplay\"\r\n                        [source]=\"source\"\r\n                        [perPageSelect]=\"perPageSelect\"\r\n                        (changePage)=\"changePage($event)\">\r\n</ng2-smart-table-pager>\r\n","import { Component, Input, Output, SimpleChange, EventEmitter, OnChanges } from '@angular/core';\r\n\r\nimport { Grid } from './lib/grid';\r\nimport { DataSource } from './lib/data-source/data-source';\r\nimport { Row } from './lib/data-set/row';\r\nimport { deepExtend } from './lib/helpers';\r\nimport { LocalDataSource } from './lib/data-source/local/local.data-source';\r\n\r\n@Component({\r\n  selector: 'ng2-smart-table',\r\n  styleUrls: ['./ng2-smart-table.component.scss'],\r\n  templateUrl: './ng2-smart-table.component.html',\r\n})\r\nexport class Ng2SmartTableComponent implements OnChanges {\r\n\r\n  @Input() source: any;\r\n  @Input() settings: Object = {};\r\n\r\n  @Output() rowSelect = new EventEmitter<any>();\r\n  @Output() userRowSelect = new EventEmitter<any>();\r\n  @Output() delete = new EventEmitter<any>();\r\n  @Output() edit = new EventEmitter<any>();\r\n  @Output() create = new EventEmitter<any>();\r\n  @Output() custom = new EventEmitter<any>();\r\n  @Output() deleteConfirm = new EventEmitter<any>();\r\n  @Output() editConfirm = new EventEmitter<any>();\r\n  @Output() createConfirm = new EventEmitter<any>();\r\n  @Output() rowHover: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n  tableClass: string;\r\n  tableId: string;\r\n  perPageSelect: any;\r\n  isHideHeader: boolean;\r\n  isHideSubHeader: boolean;\r\n  isPagerDisplay: boolean;\r\n  rowClassFunction: Function;\r\n\r\n\r\n  grid: Grid;\r\n  defaultSettings: Object = {\r\n    mode: 'inline', // inline|external|click-to-edit\r\n    selectMode: 'single', // single|multi\r\n    hideHeader: false,\r\n    hideSubHeader: false,\r\n    actions: {\r\n      columnTitle: 'Actions',\r\n      add: true,\r\n      edit: true,\r\n      delete: true,\r\n      custom: [],\r\n      position: 'left', // left|right\r\n    },\r\n    filter: {\r\n      inputClass: '',\r\n    },\r\n    edit: {\r\n      inputClass: '',\r\n      editButtonContent: 'Edit',\r\n      saveButtonContent: 'Update',\r\n      cancelButtonContent: 'Cancel',\r\n      confirmSave: false,\r\n    },\r\n    add: {\r\n      inputClass: '',\r\n      addButtonContent: 'Add New',\r\n      createButtonContent: 'Create',\r\n      cancelButtonContent: 'Cancel',\r\n      confirmCreate: false,\r\n    },\r\n    delete: {\r\n      deleteButtonContent: 'Delete',\r\n      confirmDelete: false,\r\n    },\r\n    attr: {\r\n      id: '',\r\n      class: '',\r\n    },\r\n    noDataMessage: 'No data found',\r\n    columns: {},\r\n    pager: {\r\n      display: true,\r\n      perPage: 10,\r\n    },\r\n    rowClassFunction: () => \"\"\r\n  };\r\n\r\n  isAllSelected: boolean = false;\r\n\r\n  ngOnChanges(changes: { [propertyName: string]: SimpleChange }) {\r\n    if (this.grid) {\r\n      if (changes['settings']) {\r\n        this.grid.setSettings(this.prepareSettings());\r\n      }\r\n      if (changes['source']) {\r\n        this.source = this.prepareSource();\r\n        this.grid.setSource(this.source);\r\n      }\r\n    } else {\r\n      this.initGrid();\r\n    }\r\n    this.tableId = this.grid.getSetting('attr.id');\r\n    this.tableClass = this.grid.getSetting('attr.class');\r\n    this.isHideHeader = this.grid.getSetting('hideHeader');\r\n    this.isHideSubHeader = this.grid.getSetting('hideSubHeader');\r\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\r\n    this.isPagerDisplay = this.grid.getSetting('pager.display');\r\n    this.perPageSelect = this.grid.getSetting('pager.perPageSelect');\r\n    this.rowClassFunction = this.grid.getSetting('rowClassFunction');\r\n  }\r\n\r\n  editRowSelect(row: Row) {\r\n    if (this.grid.getSetting('selectMode') === 'multi') {\r\n      this.onMultipleSelectRow(row);\r\n    } else {\r\n      this.onSelectRow(row);\r\n    }\r\n  }\r\n\r\n  onUserSelectRow(row: Row) {\r\n    if (this.grid.getSetting('selectMode') !== 'multi') {\r\n      this.grid.selectRow(row);\r\n      this.emitUserSelectRow(row);\r\n      this.emitSelectRow(row);\r\n    }\r\n  }\r\n\r\n  onRowHover(row: Row) {\r\n    this.rowHover.emit(row);\r\n  }\r\n\r\n  multipleSelectRow(row: Row) {\r\n    this.grid.multipleSelectRow(row);\r\n    this.emitUserSelectRow(row);\r\n    this.emitSelectRow(row);\r\n  }\r\n\r\n  onSelectAllRows($event: any) {\r\n    this.isAllSelected = !this.isAllSelected;\r\n    this.grid.selectAllRows(this.isAllSelected);\r\n\r\n    this.emitUserSelectRow(null);\r\n    this.emitSelectRow(null);\r\n  }\r\n\r\n  onSelectRow(row: Row) {\r\n    this.grid.selectRow(row);\r\n    this.emitSelectRow(row);\r\n  }\r\n\r\n  onMultipleSelectRow(row: Row) {\r\n    this.emitSelectRow(row);\r\n  }\r\n\r\n  initGrid() {\r\n    this.source = this.prepareSource();\r\n    this.grid = new Grid(this.source, this.prepareSettings());\r\n    this.grid.onSelectRow().subscribe((row) => this.emitSelectRow(row));\r\n  }\r\n\r\n  prepareSource(): DataSource {\r\n    if (this.source instanceof DataSource) {\r\n      return this.source;\r\n    } else if (this.source instanceof Array) {\r\n      return new LocalDataSource(this.source);\r\n    }\r\n\r\n    return new LocalDataSource();\r\n  }\r\n\r\n  prepareSettings(): Object {\r\n    return deepExtend({}, this.defaultSettings, this.settings);\r\n  }\r\n\r\n  changePage($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  sort($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  filter($event: any) {\r\n    this.resetAllSelector();\r\n  }\r\n\r\n  private resetAllSelector() {\r\n    this.isAllSelected = false;\r\n  }\r\n\r\n  private emitUserSelectRow(row: Row) {\r\n    const selectedRows = this.grid.getSelectedRows();\r\n\r\n    this.userRowSelect.emit({\r\n      data: row ? row.getData() : null,\r\n      isSelected: row ? row.getIsSelected() : null,\r\n      source: this.source,\r\n      selected: selectedRows && selectedRows.length ? selectedRows.map((r: Row) => r.getData()) : [],\r\n    });\r\n  }\r\n\r\n  private emitSelectRow(row: Row) {\r\n    this.rowSelect.emit({\r\n      data: row ? row.getData() : null,\r\n      isSelected: row ? row.getIsSelected() : null,\r\n      source: this.source,\r\n    });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { CellModule } from './components/cell/cell.module';\r\nimport { FilterModule } from './components/filter/filter.module';\r\nimport { PagerModule } from './components/pager/pager.module';\r\nimport { TBodyModule } from './components/tbody/tbody.module';\r\nimport { THeadModule } from './components/thead/thead.module';\r\n\r\nimport { Ng2SmartTableComponent } from './ng2-smart-table.component';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    CellModule,\r\n    FilterModule,\r\n    PagerModule,\r\n    TBodyModule,\r\n    THeadModule,\r\n  ],\r\n  declarations: [\r\n    Ng2SmartTableComponent,\r\n  ],\r\n  exports: [\r\n    Ng2SmartTableComponent,\r\n  ],\r\n})\r\nexport class Ng2SmartTableModule {\r\n}\r\n","export class ServerSourceConf {\r\n\r\n  protected static readonly SORT_FIELD_KEY = '_sort';\r\n  protected static readonly SORT_DIR_KEY = '_order';\r\n  protected static readonly PAGER_PAGE_KEY = '_page';\r\n  protected static readonly PAGER_LIMIT_KEY = '_limit';\r\n  protected static readonly FILTER_FIELD_KEY = '#field#_like';\r\n  protected static readonly TOTAL_KEY = 'x-total-count';\r\n  protected static readonly DATA_KEY = '';\r\n\r\n  endPoint: string;\r\n\r\n  sortFieldKey: string;\r\n  sortDirKey: string;\r\n  pagerPageKey: string;\r\n  pagerLimitKey: string;\r\n  filterFieldKey: string;\r\n  totalKey: string;\r\n  dataKey: string;\r\n\r\n  constructor(\r\n    { endPoint = '', sortFieldKey = '', sortDirKey = '',\r\n      pagerPageKey = '', pagerLimitKey = '', filterFieldKey = '', totalKey = '', dataKey = '' } = {}) {\r\n\r\n    this.endPoint = endPoint ? endPoint : '';\r\n\r\n    this.sortFieldKey = sortFieldKey ? sortFieldKey : ServerSourceConf.SORT_FIELD_KEY;\r\n    this.sortDirKey = sortDirKey ? sortDirKey : ServerSourceConf.SORT_DIR_KEY;\r\n    this.pagerPageKey = pagerPageKey ? pagerPageKey : ServerSourceConf.PAGER_PAGE_KEY;\r\n    this.pagerLimitKey = pagerLimitKey ? pagerLimitKey : ServerSourceConf.PAGER_LIMIT_KEY;\r\n    this.filterFieldKey = filterFieldKey ? filterFieldKey : ServerSourceConf.FILTER_FIELD_KEY;\r\n    this.totalKey = totalKey ? totalKey : ServerSourceConf.TOTAL_KEY;\r\n    this.dataKey = dataKey ? dataKey : ServerSourceConf.DATA_KEY;\r\n  }\r\n}\r\n","import { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { LocalDataSource } from '../local/local.data-source';\r\nimport { ServerSourceConf } from './server-source.conf';\r\nimport { getDeepFromObject } from '../../helpers';\r\n\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport class ServerDataSource extends LocalDataSource {\r\n\r\n  protected conf: ServerSourceConf;\r\n\r\n  protected lastRequestCount: number = 0;\r\n\r\n  constructor(protected http: HttpClient, conf: ServerSourceConf | {} = {}) {\r\n    super();\r\n\r\n    this.conf = new ServerSourceConf(conf);\r\n\r\n    if (!this.conf.endPoint) {\r\n      throw new Error('At least endPoint must be specified as a configuration of the server data source.');\r\n    }\r\n  }\r\n\r\n  count(): number {\r\n    return this.lastRequestCount;\r\n  }\r\n\r\n  getElements(): Promise<any> {\r\n    return this.requestElements()\r\n      .pipe(map(res => {\r\n        this.lastRequestCount = this.extractTotalFromResponse(res);\r\n        this.data = this.extractDataFromResponse(res);\r\n\r\n        return this.data;\r\n      })).toPromise();\r\n  }\r\n\r\n  /**\r\n   * Extracts array of data from server response\r\n   * @param res\r\n   * @returns {any}\r\n   */\r\n  protected extractDataFromResponse(res: any): Array<any> {\r\n    const rawData = res.body;\r\n    const data = !!this.conf.dataKey ? getDeepFromObject(rawData, this.conf.dataKey, []) : rawData;\r\n\r\n    if (data instanceof Array) {\r\n      return data;\r\n    }\r\n\r\n    throw new Error(`Data must be an array.\r\n    Please check that data extracted from the server response by the key '${this.conf.dataKey}' exists and is array.`);\r\n  }\r\n\r\n  /**\r\n   * Extracts total rows count from the server response\r\n   * Looks for the count in the heders first, then in the response body\r\n   * @param res\r\n   * @returns {any}\r\n   */\r\n  protected extractTotalFromResponse(res: any): number {\r\n    if (res.headers.has(this.conf.totalKey)) {\r\n      return +res.headers.get(this.conf.totalKey);\r\n    } else {\r\n      const rawData = res.body;\r\n      return getDeepFromObject(rawData, this.conf.totalKey, 0);\r\n    }\r\n  }\r\n\r\n  protected requestElements(): Observable<any> {\r\n    let httpParams = this.createRequesParams();\r\n    return this.http.get(this.conf.endPoint, { params: httpParams, observe: 'response' });\r\n  }\r\n\r\n  protected createRequesParams(): HttpParams {\r\n    let httpParams = new HttpParams();\r\n\r\n    httpParams = this.addSortRequestParams(httpParams);\r\n    httpParams = this.addFilterRequestParams(httpParams);\r\n    return this.addPagerRequestParams(httpParams);\r\n  }\r\n\r\n  protected addSortRequestParams(httpParams: HttpParams): HttpParams {\r\n    if (this.sortConf) {\r\n      this.sortConf.forEach((fieldConf) => {\r\n        httpParams = httpParams.set(this.conf.sortFieldKey, fieldConf.field);\r\n        httpParams = httpParams.set(this.conf.sortDirKey, fieldConf.direction.toUpperCase());\r\n      });\r\n    }\r\n\r\n    return httpParams;\r\n  }\r\n\r\n  protected addFilterRequestParams(httpParams: HttpParams): HttpParams {\r\n\r\n    if (this.filterConf.filters) {\r\n      this.filterConf.filters.forEach((fieldConf: any) => {\r\n        if (fieldConf['search']) {\r\n          httpParams = httpParams.set(this.conf.filterFieldKey.replace('#field#', fieldConf['field']), fieldConf['search']);\r\n        }\r\n      });\r\n    }\r\n\r\n    return httpParams;\r\n  }\r\n\r\n  protected addPagerRequestParams(httpParams: HttpParams): HttpParams {\r\n\r\n    if (this.pagingConf && this.pagingConf['page'] && this.pagingConf['perPage']) {\r\n      httpParams = httpParams.set(this.conf.pagerPageKey, this.pagingConf['page']);\r\n      httpParams = httpParams.set(this.conf.pagerLimitKey, this.pagingConf['perPage']);\r\n    }\r\n\r\n    return httpParams;\r\n  }\r\n}\r\n"]}